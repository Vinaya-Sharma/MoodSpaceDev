{"version":3,"file":"popup.js","mappings":";;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AC3CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;ACtpIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACxDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AC9EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;AC5CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACzHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACtEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;AC5DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;ACrFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACvrNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AC1EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACPA;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACNA;AACA;AACA;AACA;AACA;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AChDA;;;;;AEAA;AACA;AACA;AACA;AACA","sources":["webpack://moodspace/./src/popup/Popup.tsx","webpack://moodspace/./src/popup/Router.tsx","webpack://moodspace/./src/popup/analytics/ActivitiyCorrelations.tsx","webpack://moodspace/./src/popup/analytics/MoodChart.tsx","webpack://moodspace/./src/popup/components/Accountability.tsx","webpack://moodspace/./src/popup/components/Analytics.tsx","webpack://moodspace/./src/popup/components/Calendar.tsx","webpack://moodspace/./src/popup/components/Header.tsx","webpack://moodspace/./src/popup/components/Intentions.tsx","webpack://moodspace/./src/popup/components/Signup.tsx","webpack://moodspace/./src/popup/features/Calendar.Comp.tsx","webpack://moodspace/./src/popup/features/FeelingsReasons.tsx","webpack://moodspace/./src/popup/features/Journal.tsx","webpack://moodspace/./src/popup/features/MoodPicker.tsx","webpack://moodspace/./src/popup/features/TodoComp.tsx","webpack://moodspace/./src/popup/firebaseApp.tsx","webpack://moodspace/./src/popup/index.tsx","webpack://moodspace/./src/popup/const.js","webpack://moodspace/webpack/bootstrap","webpack://moodspace/webpack/runtime/chunk loaded","webpack://moodspace/webpack/runtime/compat get default export","webpack://moodspace/webpack/runtime/define property getters","webpack://moodspace/webpack/runtime/global","webpack://moodspace/webpack/runtime/hasOwnProperty shorthand","webpack://moodspace/webpack/runtime/make namespace object","webpack://moodspace/webpack/runtime/node module decorator","webpack://moodspace/webpack/runtime/jsonp chunk loading","webpack://moodspace/webpack/runtime/nonce","webpack://moodspace/webpack/before-startup","webpack://moodspace/webpack/startup","webpack://moodspace/webpack/after-startup"],"sourcesContent":["import React from \"react\";\nimport FirebaseApp from \"./firebaseApp\";\nfunction Popup() {\n    return (React.createElement(\"div\", { className: \"w-96 max-w-96 overflow-scroll flex\" },\n        React.createElement(FirebaseApp, null)));\n}\nexport default Popup;\n","import React, { useState } from \"react\";\nimport Calendar from \"./components/Calendar\";\nimport Intentions from \"./components/Intentions\";\nimport Analytics from \"./components/Analytics\";\nimport Accountability from \"./components/Accountability\";\nimport { FaCalendarAlt, FaCheck, FaChartBar } from \"react-icons/fa\";\nimport Header from \"./components/Header\";\nimport { BsPerson } from \"react-icons/bs\";\nfunction Navigation({ user, auth, db }) {\n    const tabs = [\n        {\n            name: \"Calendar\",\n            icon: React.createElement(FaCalendarAlt, null),\n            component: React.createElement(Calendar, { db: db, user: user }),\n        },\n        {\n            name: \"To Do List\",\n            icon: React.createElement(FaCheck, null),\n            component: React.createElement(Intentions, { db: db, user: user }),\n        },\n        {\n            name: \"Analytics\",\n            icon: React.createElement(FaChartBar, null),\n            component: React.createElement(Analytics, { db: db, user: user }),\n        },\n        {\n            name: \"Accountability\",\n            icon: React.createElement(BsPerson, null),\n            component: React.createElement(Accountability, { db: db, user: user }),\n        },\n    ];\n    const [activeTab, setActiveTab] = useState(tabs[0]);\n    const handleTabClick = (tab) => {\n        setActiveTab(tab);\n    };\n    return (React.createElement(\"div\", { className: \"flex w-full flex-col \" },\n        React.createElement(Header, { user: user, auth: auth }),\n        React.createElement(\"hr\", null),\n        React.createElement(\"div\", { className: \"flex p-10 min-h-[450px]\" }, activeTab.component),\n        React.createElement(\"div\", { className: \"w-full flex overflow-y-auto  justify-center items-center bg-teel text-white p-2 fixed bottom-0\" }, tabs.map((tab) => (React.createElement(\"button\", { key: tab.name, className: `flex flex-col items-center mr-4 ${activeTab === tab ? \"text-white\" : \"text-gray-300\"}`, onClick: () => handleTabClick(tab) },\n            tab.icon,\n            React.createElement(\"span\", null, tab.name)))))));\n}\nexport default Navigation;\n","import React, { useEffect, useState } from \"react\";\nconst ActivityCorrelations = ({ moodByDayData, activitiesByDay, }) => {\n    console.log(JSON.stringify(activitiesByDay));\n    const [selectedEmotion, setSelectedEmotion] = useState(null);\n    const [activities, setActivities] = useState([]);\n    const emotions = [\n        { emoji: \"🤩\", text: \"ahhh\", color: \"blue-900\" },\n        { emoji: \"😊\", text: \"nicee\", color: \"blue-500\" },\n        { emoji: \"😐\", text: \"okey\", color: \"teal-500\" },\n        { emoji: \"😔\", text: \"bummy\", color: \"orange-500\" },\n        { emoji: \"😣\", text: \"rotten\", color: \"red-500\" },\n    ];\n    const handleEmotionSelect = (emoji) => {\n        setSelectedEmotion(emoji);\n    };\n    //go through the moodByDayData find the days where the mood is the selectedmood and then for thoose days look at the moodreasons and increment the count for those reasons each time they isFunctionOrConstructorTypeNode.\n    const getActivitiesForEmotion = (mood) => {\n        const activities = {};\n        Object.entries(moodByDayData).forEach(([date, moodEmoji]) => {\n            if (moodEmoji === mood) {\n                const dateActivities = activitiesByDay[date] || [];\n                dateActivities.forEach((activity) => {\n                    activities[activity] = (activities[activity] || 0) + 1;\n                });\n            }\n        });\n        return activities;\n    };\n    useEffect(() => {\n        if (selectedEmotion) {\n            console.log(selectedEmotion);\n            const activitiesForEmotion = getActivitiesForEmotion(selectedEmotion);\n            const sortedActivities = Object.entries(activitiesForEmotion)\n                .sort((a, b) => b[1] - a[1])\n                .map(([activity, count]) => ({ activity, count }));\n            setActivities(sortedActivities);\n            console.log(sortedActivities);\n        }\n        else {\n            setActivities([]);\n        }\n    }, [selectedEmotion]);\n    return (React.createElement(\"div\", { className: \"w-80 \" },\n        React.createElement(\"div\", { className: \"relative justify-between flex place-items-center items-center mb-4\" },\n            React.createElement(\"h2\", { className: \"text-md mt-2 font-bold mb-4\" }, \"Activity Correlations\"),\n            React.createElement(\"div\", { className: \"relative\" },\n                React.createElement(\"select\", { className: \"appearance-none border min-w-[150px] w-full border-gray-300 rounded-lg py-2 px-4 leading-tight focus:outline-none focus:bg-white focus:border-gray-400\", value: selectedEmotion || \"\", onChange: (e) => handleEmotionSelect(e.target.value) },\n                    React.createElement(\"option\", { value: \"\" }, \"Select a Mood... \"),\n                    emotions.map(({ emoji, text, color }) => (React.createElement(\"option\", { className: \"flex gap-2 items-center\", key: emoji, value: emoji }, `${emoji} ${text}`)))))),\n        selectedEmotion && (activities === null || activities === void 0 ? void 0 : activities.length) > 0 ? (React.createElement(\"ul\", { className: \"flex justify-center items-center flex-wrap w-full\" }, activities.map(({ activity, count }) => (React.createElement(\"li\", { key: activity, className: \"mb-2\" },\n            React.createElement(\"div\", { className: `w-auto mx-2 justify-center h-6 m-1 py-1 px-2 text-xs rounded-full bg-teel text-white relative` },\n                activity,\n                React.createElement(\"span\", { className: \"absolute -top-2 -right-2 w-3 h-3 rounded-full bg-white p-2 border-gray-400 border-[1px] text-teel flex justify-center items-center text-xs font-bold\" }, count))))))) : (React.createElement(\"p\", null, \"Please select an emotion to see associated activities.\"))));\n};\nexport default ActivityCorrelations;\n","import React from \"react\";\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, } from \"recharts\";\nconst moods = [\n    { emoji: \"🤩\", text: \"ahhh\", color: \"blue\", count: 4 },\n    { emoji: \"😊\", text: \"nicee\", color: \"green\", count: 3 },\n    { emoji: \"😐\", text: \"okey\", color: \"orange\", count: 2 },\n    { emoji: \"😔\", text: \"bummy\", color: \"red\", count: 1 },\n    { emoji: \"😣\", text: \"rotten\", color: \"black\", count: 0 },\n];\nconst monthsOfYear = [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\",\n];\nconst getChartData = (moodData) => {\n    const chartData = [];\n    const date = new Date();\n    const year = date.getFullYear();\n    const month = date.getMonth();\n    const daysInMonth = new Date(year, month + 1, 0).getDate();\n    for (let i = 1; i <= daysInMonth; i++) {\n        const dateString = `${year}-${month + 1}-${i}`;\n        const mood = moodData[dateString] ? moodData[dateString] : \"😐\";\n        let moodIndex = 0;\n        for (let j = 0; j < moods.length; j++) {\n            if (moods[j].emoji === mood) {\n                moodIndex = moods[j].count;\n                break;\n            }\n        }\n        chartData.push({ date: i, mood: moodIndex * 5 });\n    }\n    return chartData;\n};\nconst MoodChart = ({ data }) => {\n    const chartData = getChartData(data);\n    return (React.createElement(\"div\", null,\n        React.createElement(\"h2\", { className: \"text-md mt-2 font-bold mb-4\" }, \"Monthly Mood-o-Meter\"),\n        React.createElement(LineChart, { width: 325, height: 250, data: chartData, margin: { top: 5, right: 20, bottom: 5, left: -30 } },\n            React.createElement(CartesianGrid, { strokeDasharray: \"3 3\" }),\n            React.createElement(XAxis, { dataKey: \"date\", tickFormatter: (value) => value.toString(), label: {\n                    value: monthsOfYear[new Date().getMonth()],\n                    position: \"bottom\",\n                    offset: -8,\n                } }),\n            React.createElement(YAxis, { dataKey: \"mood\", tickFormatter: (value) => [\"😣\", \"😔\", \"😐\", \"😊\", \"🤩\"][value / 5], domain: [0, 20], tick: {\n                    fontSize: 16,\n                } }),\n            React.createElement(Tooltip, null),\n            React.createElement(Line, { type: \"monotone\", dataKey: \"mood\", stroke: \"#8884d8\", activeDot: { r: 8 }, dot: { r: 4 }, strokeWidth: 2 }))));\n};\nexport default MoodChart;\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport React, { useState, useEffect } from \"react\";\nimport { arrayUnion, collection, doc, getDoc, serverTimestamp, setDoc, updateDoc, } from \"firebase/firestore\";\nconst Accountability = ({ db, user }) => {\n    const [code, setCode] = useState(\"\");\n    const [groupName, setGroupName] = useState(\"\");\n    const [members, setMembers] = useState([]);\n    const [error, setError] = useState(\"\");\n    const [groupExists, setGroupExists] = useState(false);\n    const [loading, setLoading] = useState(true);\n    const fetchGroup = () => __awaiter(void 0, void 0, void 0, function* () {\n        const userDocRef = doc(db, \"users\", user.email);\n        const userDoc = yield getDoc(userDocRef);\n        let membersnames = [];\n        if (userDoc.exists()) {\n            const groupCode = userDoc.data().group;\n            if (groupCode) {\n                setCode(groupCode);\n                setGroupExists(true);\n                const groupDocRef = doc(db, \"groups\", groupCode);\n                const groupDoc = yield getDoc(groupDocRef);\n                if (groupDoc.exists()) {\n                    const members = groupDoc\n                        .data()\n                        .members.filter((member) => member !== user.email);\n                    for (const mem of members) {\n                        const userDocRef = doc(db, \"users\", mem);\n                        const userDoc = yield getDoc(userDocRef);\n                        if (userDoc.exists()) {\n                            const membername = userDoc.data().name;\n                            const memberphoto = userDoc.data().photo;\n                            membersnames.push({\n                                name: membername,\n                                email: mem,\n                                photo: memberphoto,\n                            });\n                        }\n                        else {\n                            console.log(\"error finding member\");\n                        }\n                    }\n                    setMembers(membersnames);\n                    setLoading(false);\n                }\n            }\n        }\n    });\n    useEffect(() => {\n        fetchGroup();\n    }, []);\n    const handleCodeChange = (e) => {\n        setCode(e.target.value);\n    };\n    const handleGroupNameChange = (e) => {\n        setGroupName(e.target.value);\n    };\n    const handleCreateGroup = () => __awaiter(void 0, void 0, void 0, function* () {\n        const groupsRef = collection(db, \"groups\");\n        const code = generateCode();\n        yield setDoc(doc(groupsRef, code), {\n            groupName,\n            createdAt: serverTimestamp(),\n            members: [user.email],\n        });\n        // Update user profile\n        const userDocRef = doc(db, \"users\", user.email);\n        yield updateDoc(userDocRef, {\n            group: code,\n        });\n        setCode(code);\n        setGroupExists(true);\n    });\n    const handleJoinGroup = () => __awaiter(void 0, void 0, void 0, function* () {\n        const groupsRef = collection(db, \"groups\");\n        const groupDoc = yield getDoc(doc(groupsRef, code));\n        if (groupDoc.exists()) {\n            yield updateDoc(doc(groupsRef, code), {\n                members: arrayUnion(user.email),\n            });\n            setGroupExists(true);\n            // Update user profile\n            const userDocRef = doc(db, \"users\", user.email);\n            yield updateDoc(userDocRef, {\n                group: code,\n            });\n        }\n        else {\n            setError(\"Invalid code, please try again.\");\n        }\n    });\n    const generateCode = () => {\n        let code = \"\";\n        const characters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n        const codeLength = 6;\n        for (let i = 0; i < codeLength; i++) {\n            code += characters.charAt(Math.floor(Math.random() * characters.length));\n        }\n        return code;\n    };\n    return (React.createElement(\"div\", { className: \"flex w-80 h-[475px] pb-8 flex-col gap-4 \" },\n        React.createElement(\"h2\", { className: \"text-2xl flex flex-col font-medium font-serif flex-start justify-start w-full text-left\" },\n            \"Accountability Group!\",\n            React.createElement(\"span\", { className: \"text-sm font-bold\" }, \"See friends daily goals and help them stay on track\")),\n        !groupExists ? (React.createElement(\"div\", { className: \"flex flex-col items-center justify-center min-h-screen bg-gray-100\" },\n            React.createElement(\"div\", { className: \"max-w-md p-6 mx-auto bg-white shadow-md rounded-lg\" },\n                React.createElement(\"h1\", { className: \"text-2xl font-bold mb-6 text-center\" }, \"Create or Join a Group\"),\n                React.createElement(\"div\", { className: \"flex flex-col space-y-4\" },\n                    React.createElement(\"div\", { className: \"flex items-center space-x-4\" },\n                        React.createElement(\"input\", { type: \"text\", value: groupName, onChange: handleGroupNameChange, placeholder: \"Group Name\", className: \"flex-grow px-4 py-2 text-gray-700 border border-gray-400 rounded-lg focus:outline-none focus:border-teal-500\" }),\n                        React.createElement(\"button\", { onClick: handleCreateGroup, className: \"px-4 py-2 font-medium text-white bg-teal-500 rounded-lg hover:bg-teal-600\" }, \"Create Group\")),\n                    React.createElement(\"div\", { className: \"flex items-center space-x-4\" },\n                        React.createElement(\"input\", { type: \"text\", value: code, onChange: handleCodeChange, placeholder: \"Enter Code\", className: \"flex-grow px-4 py-2 text-gray-700 border border-gray-400 rounded-lg focus:outline-none focus:border-teal-500\" }),\n                        React.createElement(\"button\", { onClick: handleJoinGroup, className: \"px-4 py-2 font-medium text-white bg-teal-500 rounded-lg hover:bg-teal-600\" }, \"Join Group\")))))) : (React.createElement(\"div\", null,\n            React.createElement(\"div\", { className: \"flex items-center gap-2\" },\n                React.createElement(\"p\", { className: \"text-md font-medium mb-2\" }, \"Group Code:\"),\n                React.createElement(\"input\", { type: \"text\", value: code, readOnly: true, className: \"bg-gray-100 px-3 py-2 rounded-md mb-2\" })),\n            React.createElement(\"p\", { className: \"text-xs text-gray-500 mb-4\" }, \"^Share this code with others to join the group.\"),\n            loading ? (React.createElement(\"p\", { className: \"text-lg font-medium mb-4\" }, \"Waiting for members to join...\")) : (React.createElement(\"div\", null,\n                React.createElement(\"p\", { className: \"text-md font-medium mb-2\" }, \"Members:\"),\n                React.createElement(\"ul\", { className: \"list-disc list-inside\" }, members.map((member) => (React.createElement(\"div\", { key: member.email },\n                    React.createElement(\"img\", { src: member.photo }),\n                    React.createElement(\"p\", { key: member.email, className: \"text-sm text-gray-500 mb-1\" }, member.name))))))),\n            error && React.createElement(\"p\", { className: \"text-red-500\" }, error)))));\n};\nexport default Accountability;\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport React, { useEffect, useState } from \"react\";\nimport MoodChart from \"../analytics/MoodChart\";\nimport ActivityCorrelations from \"../analytics/ActivitiyCorrelations\";\nimport { collection, doc, getDoc, onSnapshot } from \"firebase/firestore\";\nconst Analytics = ({ db, user }) => {\n    const [moodByDayData, setMoodByDayData] = useState({});\n    const [reasonsByDayData, setReasonsByDayData] = useState({});\n    const gettingData = () => __awaiter(void 0, void 0, void 0, function* () {\n        const docRef = doc(db, \"users\", user.email);\n        const docSnap = yield getDoc(docRef);\n        if (docSnap.exists()) {\n            const data = docSnap.data().moodReasons;\n            console.log(\"Document data:\", data);\n            if (data) {\n                setReasonsByDayData(data);\n            }\n        }\n        else {\n            // docSnap.data() will be undefined in this case\n            console.log(\"No such document!\");\n        }\n    });\n    useEffect(() => {\n        const moodByDayRef = collection(db, \"users\", user.email, \"moodByDay\");\n        const unsubscribe = onSnapshot(moodByDayRef, (querySnapshot) => {\n            const moodByDay = {};\n            querySnapshot.forEach((doc) => {\n                const date = doc.id;\n                const mood = doc.data();\n                moodByDay[date] = mood.emoji;\n            });\n            console.log(moodByDay);\n            setMoodByDayData(moodByDay);\n        });\n        return unsubscribe;\n    }, [user, db]);\n    //setting activities\n    useEffect(() => {\n        gettingData();\n    }, []);\n    return (React.createElement(\"div\", { className: \"flex w-80 pb-8 flex-col items-center justify-center gap-4 \" },\n        React.createElement(\"h2\", { className: \"text-2xl flex flex-col font-medium font-serif flex-start justify-start w-full text-left\" },\n            \"Emojinal Intelligence\",\n            React.createElement(\"span\", { className: \"text-sm font-bold\" }, \"Your Mood Stats and Streaks!\")),\n        React.createElement(MoodChart, { data: moodByDayData }),\n        React.createElement(ActivityCorrelations, { moodByDayData: moodByDayData, activitiesByDay: reasonsByDayData })));\n};\nexport default Analytics;\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport React, { useState, useEffect } from \"react\";\nimport CalendarComp from \"../features/Calendar.Comp\";\nimport { collection, doc, onSnapshot, writeBatch, } from \"firebase/firestore\";\nconst Calendar = ({ db, user }) => {\n    const [year, setYear] = useState(new Date().getFullYear());\n    const [month, setMonth] = useState(new Date().getMonth());\n    const [moodByDay, setMoodByDay] = useState({});\n    // Load mood data from local storage on mount\n    useEffect(() => {\n        const moodByDayRef = collection(db, \"users\", user.email, \"moodByDay\");\n        const unsubscribe = onSnapshot(moodByDayRef, (querySnapshot) => {\n            const moodByDay = {};\n            querySnapshot.forEach((doc) => {\n                const date = doc.id;\n                const mood = doc.data();\n                moodByDay[date] = mood.emoji;\n            });\n            console.log(moodByDay);\n            setMoodByDay(moodByDay);\n        });\n        return unsubscribe;\n    }, [user, db]);\n    const writetodatabase = () => __awaiter(void 0, void 0, void 0, function* () {\n        try {\n            const batch = writeBatch(db);\n            Object.keys(moodByDay).forEach((date) => {\n                const moodRef = doc(db, \"users\", user.email, \"moodByDay\", date);\n                batch.set(moodRef, { emoji: moodByDay[date] });\n            });\n            yield batch.commit();\n            console.log(\"Documents written successfully\");\n        }\n        catch (e) {\n            console.error(\"Error adding documents: \", e);\n        }\n    });\n    // Save mood data to local storage on each update\n    useEffect(() => {\n        writetodatabase();\n    }, [moodByDay]);\n    const handlePrevMonth = () => {\n        if (month === 0) {\n            setMonth(11);\n            setYear(year - 1);\n        }\n        else {\n            setMonth(month - 1);\n        }\n    };\n    const handleNextMonth = () => {\n        if (month === 11) {\n            setMonth(0);\n            setYear(year + 1);\n        }\n        else {\n            setMonth(month + 1);\n        }\n    };\n    return (React.createElement(\"div\", { className: \"justify-center w-80 \" },\n        React.createElement(\"div\", { className: \"flex justify-between items-center mb-4\" },\n            React.createElement(\"h2\", { className: \"text-2xl font-medium font-serif text-teal\" }, new Date(year, month).toLocaleDateString(\"en-US\", {\n                month: \"long\",\n                year: \"numeric\",\n            })),\n            React.createElement(\"div\", null,\n                React.createElement(\"button\", { className: \"bg-teel rounded-full px-3 py-1 mr-2 text-white hover:bg-opacity-80 transition-colors\", onClick: handlePrevMonth }, \"<\"),\n                React.createElement(\"button\", { className: \"bg-teel rounded-full px-3 py-1 text-white hover:bg-opacity-80 transition-colors\", onClick: handleNextMonth }, \">\"))),\n        React.createElement(CalendarComp, { year: year, month: month, moodByDay: moodByDay, setMoodByDay: setMoodByDay, db: db, user: user })));\n};\nexport default Calendar;\n","import React, { useState } from \"react\";\nimport { BsFillGearFill } from \"react-icons/bs\";\nfunction Header({ user, auth }) {\n    const [showSettings, setShowSettings] = useState(false);\n    const handleLogout = () => {\n        chrome.identity.getAuthToken({ interactive: true }, (token) => {\n            if (chrome.runtime.lastError) {\n                console.error(chrome.runtime.lastError);\n            }\n            else if (token) {\n                chrome.identity.removeCachedAuthToken({ token: token }, () => {\n                    auth\n                        .signOut()\n                        .then(() => {\n                        console.log(\"User signed out successfully\");\n                    })\n                        .catch((error) => {\n                        console.error(\"Error signing out: \", error);\n                    });\n                });\n            }\n            else {\n                auth\n                    .signOut()\n                    .then(() => {\n                    console.log(\"User signed out successfully\");\n                })\n                    .catch((error) => {\n                    console.error(\"Error signing out: \", error);\n                });\n            }\n        });\n    };\n    return (React.createElement(\"div\", { className: \"w-full p-4 flex items-center justify-between\" },\n        React.createElement(\"h1\", { className: \"text-sm font-medium font-serif \" }, \"MoodSpace\"),\n        React.createElement(\"div\", { className: \"relative mr-4\" },\n            React.createElement(BsFillGearFill, { className: \"text-sm cursor-pointer\", onClick: () => setShowSettings(!showSettings) }),\n            showSettings && (React.createElement(\"div\", { className: \"absolute right-2 mt-2 py-2 w-48 bg-white rounded-lg shadow-xl z-10\" },\n                React.createElement(\"div\", { className: \"px-4 py-2 font-medium text-gray-800\" },\n                    \"Signed in as: \",\n                    user.email),\n                React.createElement(\"div\", { className: \"py-2 border-t border-gray-300\" },\n                    React.createElement(\"button\", { className: \"block w-full text-left px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 hover:text-gray-900\", onClick: handleLogout }, \"Logout\")))))));\n}\nexport default Header;\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport React, { useState, useEffect } from \"react\";\nimport Journal from \"../features/Journal\";\nimport TodoComp from \"../features/TodoComp\";\nimport { format } from \"date-fns\";\nimport { collection, doc, onSnapshot, writeBatch, } from \"firebase/firestore\";\nconst Intentions = ({ db, user }) => {\n    const [currentDay, setCurrentDay] = useState(new Date());\n    // getting journals + todos\n    const [journalByDay, setJournalByDay] = useState({});\n    const [todosData, setTodosData] = useState({});\n    const [showJournal, setShowJournal] = useState(false);\n    const [selectedMember, setSelectedMember] = useState(user.email);\n    const gettododata = () => __awaiter(void 0, void 0, void 0, function* () {\n        const todosref = collection(db, \"users\", selectedMember, \"todos\");\n        const unsubscribe = onSnapshot(todosref, (querySnapshot) => {\n            const todosbyday = {};\n            querySnapshot.forEach((doc) => {\n                const date = doc.id;\n                const mood = doc.data().date;\n                todosbyday[date] = mood;\n            });\n            console.log(todosbyday);\n            setTodosData(todosbyday);\n        });\n        return unsubscribe;\n    });\n    // getting journal\n    useEffect(() => {\n        getjournaldata();\n        gettododata();\n        console.log(\"change\");\n    }, [selectedMember]);\n    const getjournaldata = () => __awaiter(void 0, void 0, void 0, function* () {\n        const journalsbydayjournalref = collection(db, \"users\", user.email, \"journals\");\n        const unsubscribe = onSnapshot(journalsbydayjournalref, (querySnapshot) => {\n            const journalsbyday = {};\n            querySnapshot.forEach((doc) => {\n                const date = doc.id;\n                const journal = doc.data();\n                console.log(\"journal\", journal);\n                journalsbyday[date] = journal;\n            });\n            setJournalByDay(journalsbyday);\n            console.log(\"journlas by day\", journalByDay);\n        });\n        return unsubscribe;\n    });\n    //setting todos\n    const writetodostodatabase = () => __awaiter(void 0, void 0, void 0, function* () {\n        try {\n            const batch = writeBatch(db);\n            Object.keys(todosData).forEach((date) => {\n                const todosref = doc(db, \"users\", user.email, \"todos\", date);\n                console.log(date);\n                batch.set(todosref, { date: todosData[date] });\n            });\n            yield batch.commit();\n            console.log(\"Documents written successfully\");\n        }\n        catch (e) {\n            console.error(\"Error adding documents: \", e);\n        }\n    });\n    useEffect(() => {\n        selectedMember == user.email && writetodostodatabase();\n    }, [todosData]);\n    // getting journals\n    useEffect(() => {\n        const journaldayref = collection(db, \"users\", user.email, \"journals\");\n        const unsubscribe = onSnapshot(journaldayref, (querySnapshot) => {\n            const journalsbyday = {};\n            querySnapshot.forEach((doc) => {\n                const date = doc.id;\n                const journal = doc.data();\n                journalsbyday[date] = journal;\n            });\n            console.log(journalsbyday);\n            setJournalByDay(journalsbyday);\n        });\n        return unsubscribe;\n    }, [user, db]);\n    const handlePrevDay = () => {\n        setCurrentDay((prevDay) => {\n            const newDay = new Date(prevDay);\n            newDay.setDate(newDay.getDate() - 1);\n            return newDay;\n        });\n    };\n    const handleNextDay = () => {\n        setCurrentDay((prevDay) => {\n            const newDay = new Date(prevDay);\n            newDay.setDate(newDay.getDate() + 1);\n            return newDay;\n        });\n    };\n    return (React.createElement(\"div\", { className: \"justify-center font-serif w-80 min-h-[475px]\" },\n        React.createElement(\"div\", { className: \"flex justify-between items-center\" },\n            React.createElement(\"h2\", { className: \"text-2xl font-medium font-serif \" }, showJournal ? \"Brain Dump\" : \"Intentions\"),\n            React.createElement(\"div\", null,\n                React.createElement(\"button\", { className: \"bg-teel rounded-full px-3 py-1 mr-2 text-white hover:bg-opacity-80 transition-colors\", onClick: handlePrevDay }, \"<\"),\n                React.createElement(\"button\", { className: \"bg-teel rounded-full px-3 py-1 text-white hover:bg-opacity-80 transition-colors\", onClick: handleNextDay }, \">\"))),\n        React.createElement(\"div\", { className: \" flex mt-1 justify-between\" },\n            React.createElement(\"h2\", { className: \"text-md font-bold text-gray-800 mb-2\" }, format(currentDay, \"EEEE, MMMM d, yyyy\")),\n            React.createElement(\"div\", { className: \"border border-cpink h-8 rounded-lg flex max-w-[150px]\" },\n                React.createElement(\"button\", { className: `${!showJournal ? \"bg-cpink text-white\" : \"bg-white text-cpink\"} rounded-l-md flex w-full items-center px-2 justify-center transition-colors duration-300`, onClick: () => setShowJournal(false) },\n                    React.createElement(\"span\", null, \"Todos\")),\n                React.createElement(\"button\", { className: `${showJournal ? \"bg-cpink text-white\" : \"bg-white text-cpink\"} rounded-r-md flex items-center w-full  px-2 justify-center transition-colors duration-300`, onClick: () => setShowJournal(true) },\n                    React.createElement(\"span\", null, \"Journal\")))),\n        showJournal ? (React.createElement(\"div\", { className: \"my-4 w-80 \" },\n            React.createElement(Journal, { currentDay: currentDay, setJournalByDay: setJournalByDay, journalByDay: journalByDay, user: user, db: db }))) : (React.createElement(\"div\", { className: \"my-4 w-80 \" },\n            React.createElement(TodoComp, { currentDay: currentDay, setTodosData: setTodosData, todosData: todosData, user: user, db: db, selectedMember: selectedMember, setSelectedMember: setSelectedMember })))));\n};\nexport default Intentions;\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport React from \"react\";\nimport { doc, setDoc } from \"firebase/firestore\";\nconst Signup = ({ user, db, setFirstTime }) => {\n    const [name, setName] = React.useState(\"\");\n    const [age, setAge] = React.useState(\"\");\n    const [reason, setReason] = React.useState(\"productivity\");\n    const [otherReason, setOtherReason] = React.useState(\"\");\n    const [submitting, setSubmitting] = React.useState(false);\n    const handleSubmit = (e) => __awaiter(void 0, void 0, void 0, function* () {\n        e.preventDefault();\n        setSubmitting(true);\n        let thereason = reason == \"other\" ? otherReason : reason;\n        console.log(reason);\n        try {\n            const userData = {\n                name,\n                age,\n                photo: user.photoURL,\n                reason: thereason,\n            };\n            yield setDoc(doc(db, \"users\", user.email), userData);\n            console.log(\"User data saved to Firestore:\", userData);\n        }\n        catch (error) {\n            console.error(\"Error writing user data to Firestore:\", error);\n        }\n        finally {\n            setSubmitting(false);\n            setFirstTime(false);\n        }\n    });\n    return (React.createElement(\"div\", { className: \"flex flex-col justify-center items-center\" },\n        React.createElement(\"div\", { className: \" flex mt-8 gap-2\" },\n            React.createElement(\"img\", { src: \"logo128x128.png\", alt: \"MoodSpace logo\", className: \"w-10 mb-2\" }),\n            React.createElement(\"h1\", { className: \"text-xl font-serif font-bold\" }, \"Welcome to MoodSpace\")),\n        React.createElement(\"form\", { className: \"flex flex-wrap gap-4 pb-4 px-4\", onSubmit: handleSubmit },\n            React.createElement(\"div\", { className: \"w-64 mb-4\" },\n                React.createElement(\"label\", { className: \"block w-full text-gray-700 font-bold mb-2\", htmlFor: \"email\" }, \"Email\"),\n                React.createElement(\"input\", { className: \" w-64 border rounded-md py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\", id: \"email\", type: \"email\", value: user.email, disabled: true })),\n            React.createElement(\"div\", { className: \"mb-4\" },\n                React.createElement(\"label\", { className: \"block text-gray-700 font-bold mb-2\", htmlFor: \"name\" }, \"First Name\"),\n                React.createElement(\"input\", { className: \"border rounded-md  w-52 py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\", id: \"name\", type: \"text\", value: name, onChange: (e) => setName(e.target.value) })),\n            React.createElement(\"div\", { className: \"mb-4\" },\n                React.createElement(\"label\", { className: \"block text-gray-700 font-bold mb-2\", htmlFor: \"age\" }, \"Age\"),\n                React.createElement(\"input\", { className: \"border rounded-md py-2 px-3 max-w-[100px] text-gray-700 leading-tight focus:outline-none focus:shadow-outline\", id: \"age\", type: \"number\", value: age, onChange: (e) => setAge(e.target.value) })),\n            React.createElement(\"div\", { className: \"flex w-full  mb-4\" },\n                React.createElement(\"div\", null,\n                    React.createElement(\"label\", { className: \"block text-gray-700 font-bold mb-2\", htmlFor: \"reason\" }, \"Reason for using MoodSpace\"),\n                    React.createElement(\"select\", { className: \"border min-w-[150px] rounded-md py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\", id: \"reason\", value: reason, onChange: (e) => {\n                            setReason(e.target.value);\n                            console.log(reason);\n                        } },\n                        React.createElement(\"option\", { value: \"productivity\" }, \"Productivity\"),\n                        React.createElement(\"option\", { value: \"wellness\" }, \"Wellness\"),\n                        React.createElement(\"option\", { value: \"both\" }, \"Both!\"),\n                        React.createElement(\"option\", { value: \"other\" }, \"Other\"))),\n                reason === \"other\" && (React.createElement(\"div\", { className: \"mt-6 \" },\n                    React.createElement(\"input\", { className: \"border justify-start rounded-md py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\", id: \"otherReason\", type: \"text\", placeholder: \"please share why\", value: otherReason, onChange: (e) => setOtherReason(e.target.value) })))),\n            React.createElement(\"div\", { className: \"flex w-full justify-center\" },\n                React.createElement(\"button\", { type: \"submit\", className: \"bg-teal-500 w-full hover:bg-teal-600 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\" }, \"Submit\")))));\n};\nexport default Signup;\n","import React, { useState } from \"react\";\nimport MoodPicker from \"./MoodPicker\";\nimport FeelingsReasons from \"./FeelingsReasons\";\nconst CalendarComp = ({ year, month, moodByDay, setMoodByDay, db, user }) => {\n    const weekdays = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\n    const firstDayOfMonth = new Date(year, month, 1).getDay();\n    const daysInMonth = new Date(year, month + 1, 0).getDate();\n    const days = Array.from({ length: daysInMonth }, (_, i) => i + 1);\n    const [selectedDay, setSelectedDay] = useState(null);\n    const [mood, setMood] = useState(true);\n    const today = new Date();\n    const emotions = [\n        { emoji: \"🤩\", text: \"ahhh\", color: \"violet-300\" },\n        { emoji: \"😊\", text: \"nicee\", color: \"blue-300\" },\n        { emoji: \"😐\", text: \"okey\", color: \"teal-300\" },\n        { emoji: \"😔\", text: \"bummy\", color: \"orange-300\" },\n        { emoji: \"😣\", text: \"rotten\", color: \"red-300\" },\n    ];\n    const handleDayClick = (day) => {\n        setSelectedDay(day);\n    };\n    const isCurrentDay = (day) => {\n        return (year === today.getFullYear() &&\n            month === today.getMonth() &&\n            day === today.getDate());\n    };\n    const getEmojiForDay = (day) => {\n        if (moodByDay.hasOwnProperty(`${year}-${month + 1}-${day}`)) {\n            const emoji = moodByDay[`${year}-${month + 1}-${day}`];\n            const emotion = emotions.find((e) => e.emoji === emoji);\n            return (React.createElement(\"div\", { className: `w-6 h-6 rounded-full bg-${emotion.color} flex items-center justify-center text-xl`, style: { cursor: \"pointer\" } }, moodByDay[`${year}-${month + 1}-${day}`]));\n        }\n        return null;\n    };\n    return (React.createElement(\"div\", { className: \"grid w-80 grid-cols-7 gap-4 text-center\" },\n        weekdays.map((day) => (React.createElement(\"div\", { key: day, className: \"text-gray-700 font-medium\" }, day))),\n        Array.from({ length: firstDayOfMonth }, (_, i) => (React.createElement(\"div\", { key: `pre_${i}`, className: \"text-gray-300\" }, \"\"))),\n        days.map((day) => (React.createElement(\"div\", { key: day, className: `flex items-center justify-center ${selectedDay === day ? \"bg-gray-200\" : \"\"}`, onClick: () => handleDayClick(day), style: { cursor: \"pointer\" } }, getEmojiForDay(day) || (React.createElement(\"div\", { className: `w-6 h-6 rounded-full ${isCurrentDay(day) ? \"bg-teel\" : \"bg-gray-300\"} `, onClick: () => setSelectedDay(day), style: { cursor: \"pointer\" } }))))),\n        selectedDay !== null && (React.createElement(\"div\", { key: `popup_${selectedDay}`, className: \"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center\", style: { zIndex: 9999 }, onClick: (event) => {\n                if (event.target === event.currentTarget) {\n                    setSelectedDay(null);\n                }\n            } },\n            React.createElement(\"div\", { className: \"bg-white rounded-lg w-80 p-4 flex flex-col\" }, mood ? (isCurrentDay(selectedDay) ? (React.createElement(MoodPicker, { year: year, month: month, moodByDay: moodByDay, setMoodByDay: setMoodByDay, selectedDay: selectedDay, setMood: setMood })) : (React.createElement(\"div\", null,\n                \" \",\n                React.createElement(\"h1\", { className: \"font-bold\" }, \"Oopsie! Looks like you're a time traveler. \\uD83E\\uDE84\"),\n                React.createElement(\"h1\", { className: \"underline\" }, `You can't track your mood for a day ${year < today.getFullYear() ||\n                    month < today.getMonth() ||\n                    selectedDay < today.getDate()\n                    ? \"from the past!\"\n                    : \"that hasn't happened yet!\"}\n                      `),\n                React.createElement(\"h1\", { className: \"mt-2\" }, \"Come back tomorrow and don't miss a day, I want to hear all about how you're feeling! \\uD83D\\uDE80\\uD83D\\uDD70\\uFE0F\\uD83D\\uDC4B\")))) : (React.createElement(FeelingsReasons, { selectedDay: selectedDay, setMood: setMood, year: year, month: month, setSelectedDay: setSelectedDay, user: user, db: db }))),\n            React.createElement(\"span\", { className: \"bg-red-300\" }),\n            React.createElement(\"span\", { className: \"bg-orange-300\" }, \" \"),\n            React.createElement(\"span\", { className: \"bg-green-300\" }, \" \"),\n            React.createElement(\"span\", { className: \"bg-teal-300\" }, \" \"),\n            React.createElement(\"span\", { className: \"bg-blue-300\" }, \" \"),\n            React.createElement(\"span\", { className: \"bg-violet-300\" }, \" \")))));\n};\nexport default CalendarComp;\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { doc, getDoc, setDoc } from \"firebase/firestore\";\nimport React, { useEffect, useState } from \"react\";\nimport { FaArrowLeft } from \"react-icons/fa\";\nconst FeelingsReasons = ({ selectedDay, setMood, year, month, setSelectedDay, user, db, }) => {\n    const [reasonsData, setReasonsData] = useState([]);\n    const [selectedReasons, setSelectedReasons] = useState([]);\n    const gettingData = () => __awaiter(void 0, void 0, void 0, function* () {\n        const docRef = doc(db, \"users\", user.email);\n        const docSnap = yield getDoc(docRef);\n        if (docSnap.exists()) {\n            const data = docSnap.data().moodReasons;\n            console.log(\"Document data:\", data);\n            if (data) {\n                setReasonsData(data);\n                console.log(data[`${year}-${month + 1}-${selectedDay}`]);\n                console.log(year, month, selectedDay);\n                setSelectedReasons(data[`${year}-${month + 1}-${selectedDay}`]\n                    ? data[`${year}-${month + 1}-${selectedDay}`]\n                    : []);\n            }\n        }\n        else {\n            // docSnap.data() will be undefined in this case\n            console.log(\"No such document!\");\n        }\n    });\n    // Load reasons from local storage on mount\n    useEffect(() => {\n        gettingData();\n    }, []);\n    //   useEffect(() => {\n    //     setMood(true);\n    //   }, [selectedDay]);\n    const reasons = [\n        \"Food\",\n        \"Sleep\",\n        \"Exercise\",\n        \"Family\",\n        \"Partner\",\n        \"Social Media\",\n        \"Friends\",\n        \"Events\",\n        \"School\",\n        \"Work\",\n        \"Money\",\n        \"Pets\",\n        \"Hobbies\",\n        \"Music\",\n    ];\n    const handleReasonClick = (reason) => {\n        if (selectedReasons.includes(reason)) {\n            setSelectedReasons(selectedReasons.filter((r) => r !== reason));\n        }\n        else {\n            setSelectedReasons([...selectedReasons, reason]);\n        }\n    };\n    return (React.createElement(\"div\", { className: \"bg-white rounded-lg p-4 font-serif\" },\n        React.createElement(\"h3\", { className: \"text-[16px] mb-4 font-bold\" }, \"What made you feel this way\"),\n        React.createElement(\"div\", { className: \"flex flex-wrap justify-center\" }, reasons.map((reason) => (React.createElement(\"button\", { key: reason, className: `w-auto justify-center h-6 m-1 py-1 px-2 text-xs rounded-full ${selectedReasons.includes(reason)\n                ? \"bg-teel text-white\"\n                : \"bg-gray-200 text-gray-800\"}`, onClick: () => handleReasonClick(reason) }, reason)))),\n        React.createElement(\"div\", { className: \"flex place-items-center justify-between mt-4\" },\n            React.createElement(FaArrowLeft, { className: \"text-teel hover:text-teal-600 text-lg \", onClick: () => {\n                    setMood(true);\n                } }),\n            React.createElement(\"button\", { className: \"bg-teel hover:bg-teal-600 text-white py-2 px-4 rounded-lg\", onClick: () => {\n                    const newReasons = Object.assign({}, reasonsData);\n                    newReasons[`${year}-${month + 1}-${selectedDay}`] = selectedReasons;\n                    // localStorage.setItem(\"moodReasons\", JSON.stringify(newReasons));\n                    const userRef = doc(db, \"users\", user.email);\n                    setDoc(userRef, { moodReasons: newReasons }, { merge: true });\n                    setSelectedDay(null);\n                    setMood(true);\n                } }, \"Save\"))));\n};\nexport default FeelingsReasons;\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport React, { useState, useEffect } from \"react\";\nimport { format } from \"date-fns\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { doc, writeBatch } from \"firebase/firestore\";\nconst Journal = ({ currentDay, setJournalByDay, journalByDay, user, db }) => {\n    console.log(\"data here is\", journalByDay);\n    const [journalInput, setJournalInput] = useState(journalByDay[format(currentDay, \"yyyy-MM-dd\")]\n        ? journalByDay[format(currentDay, \"yyyy-MM-dd\")].content\n        : \"\");\n    const [editmode, seteditmode] = useState(journalByDay[format(currentDay, \"yyyy-MM-dd\")] ? true : false);\n    useEffect(() => {\n        setJournalInput(journalByDay[format(currentDay, \"yyyy-MM-dd\")]\n            ? journalByDay[format(currentDay, \"yyyy-MM-dd\")].content\n            : \"\");\n    }, [currentDay]);\n    const handleAddEntry = () => {\n        setJournalByDay((prevJournals) => (Object.assign(Object.assign({}, prevJournals), { [format(currentDay, \"yyyy-MM-dd\")]: {\n                id: uuidv4(),\n                title: \"\",\n                content: \"\",\n            } })));\n    };\n    const handleJournalInputChange = (e) => {\n        setJournalInput(e.target.value);\n    };\n    const handleSaveEntry = () => __awaiter(void 0, void 0, void 0, function* () {\n        const newJournal = Object.assign(Object.assign({}, journalByDay), { [format(currentDay, \"yyyy-MM-dd\")]: {\n                title: format(currentDay, \"EEEE, MMMM d, yyyy\"),\n                content: journalInput,\n            } });\n        setJournalByDay(newJournal);\n        console.log(journalByDay);\n        const batch = writeBatch(db);\n        Object.keys(newJournal).forEach((date) => {\n            const journalRef = doc(db, \"users\", user.email, \"journals\", date);\n            batch.set(journalRef, Object.assign({}, newJournal[date]));\n        });\n        yield batch.commit();\n        console.log(\"Journals written successfully\");\n    });\n    // setting journals\n    const writejournalstodatabase = () => __awaiter(void 0, void 0, void 0, function* () {\n        console.log(\"running..\");\n        try {\n            const batch = writeBatch(db);\n            Object.keys(journalByDay).forEach((date) => {\n                const journalref = doc(db, \"users\", user.email, \"journals\", date);\n                batch.set(journalref, { journal: journalByDay[date] });\n            });\n            yield batch.commit();\n            console.log(\"Documents written successfully\");\n        }\n        catch (e) {\n            console.error(\"Error adding documents: \", e);\n        }\n    });\n    const getJournalByDate = (date) => {\n        const formattedDate = format(date, \"yyyy-MM-dd\");\n        if (journalByDay[formattedDate]) {\n            return journalByDay[formattedDate];\n        }\n    };\n    return (React.createElement(\"div\", null,\n        React.createElement(\"div\", null,\n            React.createElement(\"textarea\", { className: \"shadow appearance-none border border-gray-200 min-h-[175px] text-left rounded py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline w-full\", id: \"journal-input\", placeholder: \"Write your journal here...\\nThis can be a daily reflection, summary of your day, or any thoughts you just want to note down :)\", onChange: (e) => handleJournalInputChange(e), value: journalInput }),\n            React.createElement(\"button\", { className: `${journalByDay[format(currentDay, \"yyyy-MM-dd\")]\n                    ? journalByDay[format(currentDay, \"yyyy-MM-dd\")].content ==\n                        journalInput\n                        ? \"bg-cpink\"\n                        : \"bg-red-400\"\n                    : journalInput == \"\"\n                        ? \"bg-cpink\"\n                        : \"bg-red-400\"} hover:bg-red-200 text-white mt-2 font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline `, onClick: handleSaveEntry }, \"Save Journal\"))));\n};\nconst JournalEntry = ({ entry }) => {\n    return (React.createElement(\"div\", { className: \"journal-entry\" },\n        React.createElement(\"p\", null, entry.content)));\n};\nexport default Journal;\n","import React from \"react\";\nconst MoodPicker = ({ year, month, moodByDay, setMoodByDay, selectedDay, setMood, }) => {\n    const emotions = [\n        { emoji: \"😣\", text: \"rotten\", color: \"red-500\" },\n        { emoji: \"😔\", text: \"bummy\", color: \"orange-500\" },\n        { emoji: \"😐\", text: \"okey\", color: \"teal-500\" },\n        { emoji: \"😊\", text: \"nicee\", color: \"blue-500\" },\n        { emoji: \"🤩\", text: \"ahhh\", color: \"violet-900\" },\n    ];\n    return (React.createElement(\"div\", { className: \"flex flex-wrap px-2 font-serif w-full justify-between items-center gap-4\" }, emotions.map((emotion) => (React.createElement(\"div\", { key: emotion.emoji, className: \"flex justify-center items-center flex-col\" },\n        React.createElement(\"div\", { className: `w-8 h-8 rounded-full flex flex-col items-center place-items-center justify-center cursor-pointer transition-all ${moodByDay[`${year}-${month + 1}-${selectedDay}`] === emotion.emoji\n                ? `bg-teel`\n                : `bg-gray-200 `}`, onClick: () => {\n                const newMoodByDay = Object.assign({}, moodByDay);\n                newMoodByDay[`${year}-${month + 1}-${selectedDay}`] =\n                    emotion.emoji;\n                setMoodByDay(newMoodByDay);\n                setMood(false);\n            } },\n            React.createElement(\"span\", { className: \"text-xl\" }, emotion.emoji)),\n        React.createElement(\"span\", { className: `font-bold text-xs text-${emotion.color}` }, emotion.text),\n        React.createElement(\"span\", { className: \"text-red-500\" }),\n        React.createElement(\"span\", { className: \"text-orange-500\" }, \" \"),\n        React.createElement(\"span\", { className: \"text-green-500\" }, \" \"),\n        React.createElement(\"span\", { className: \"text-teal-500\" }, \" \"),\n        React.createElement(\"span\", { className: \"text-blue-500\" }, \" \"),\n        React.createElement(\"span\", { className: \"text-violet-900\" }, \" \"))))));\n};\nexport default MoodPicker;\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { format } from \"date-fns\";\nimport { FaTrash } from \"react-icons/fa\";\nimport { doc, getDoc } from \"firebase/firestore\";\nconst TodoComp = ({ currentDay, setTodosData: setTodos, todosData: todos, user, db, selectedMember, setSelectedMember, }) => {\n    const [selected, setSelected] = useState(1);\n    const [showPopup, setShowPopup] = useState(false);\n    const [timeFormat, setTimeFormat] = useState(\"mins\");\n    const [acctimeFormat, setaccTimeFormat] = useState(\"mins\");\n    const selectRef = useRef(null);\n    const selectRef2 = useRef(null);\n    const [code, setCode] = useState(\"\");\n    const [members, setMembers] = useState([]);\n    const [groupExists, setGroupExists] = useState(false);\n    const [loading, setLoading] = useState(true);\n    const handleKeyPress = (event) => {\n        if (event.key === \"Enter\" && event.target.value.trim() !== \"\") {\n            const newTodo = {\n                text: event.target.value.trim(),\n                plannedTime: \"\",\n                actualTime: \"\",\n                completed: false,\n            };\n            const todosForCurrentDay = todos[format(currentDay, \"yyyy-MM-dd\")] || [];\n            setTodos(Object.assign(Object.assign({}, todos), { [format(currentDay, \"yyyy-MM-dd\")]: [...todosForCurrentDay, newTodo] }));\n            event.target.value = \"\";\n        }\n    };\n    const getValue = () => {\n        return selectRef.current.value;\n    };\n    const getValue2 = () => {\n        return selectRef2.current.value;\n    };\n    const handleCheckboxChange = (event, date, index) => {\n        const newTodos = Object.assign({}, todos);\n        newTodos[format(currentDay, \"yyyy-MM-dd\")][index].completed =\n            event.target.checked;\n        setSelected(index);\n        if (event.target.checked) {\n            setShowPopup(true);\n        }\n        setTodos(newTodos);\n    };\n    const handleActualTimeChange = (event, date, updateTime, value) => {\n        const newTodos = Object.assign({}, todos);\n        if (updateTime) {\n            const formatting = getValue2();\n            newTodos[format(currentDay, \"yyyy-MM-dd\")][selected].actualTime =\n                event.target.value;\n            newTodos[format(currentDay, \"yyyy-MM-dd\")][selected].acctimeFormat =\n                formatting;\n        }\n        else {\n            newTodos[format(currentDay, \"yyyy-MM-dd\")][selected].acctimeFormat =\n                value;\n        }\n        setTodos(newTodos);\n        if (event.key === \"Enter\" && event.target.value.trim() !== \"\") {\n            setShowPopup(false);\n        }\n    };\n    const handlePlannedTimeChange = (event, date, index, updateTime, value) => {\n        const newTodos = Object.assign({}, todos);\n        if (updateTime) {\n            const selectValue = getValue();\n            newTodos[format(currentDay, \"yyyy-MM-dd\")][index].plannedTime =\n                event.target.value.trim();\n            newTodos[format(currentDay, \"yyyy-MM-dd\")][index].timeFormat =\n                selectValue;\n        }\n        else {\n            newTodos[format(currentDay, \"yyyy-MM-dd\")][index].timeFormat = value;\n        }\n        setTodos(newTodos);\n    };\n    const handleClosePopup = (event) => {\n        if (event.key === \"Enter\" && event.target.value.trim() !== \"\") {\n            setShowPopup(false);\n        }\n    };\n    const handleDeleteClick = (index) => {\n        const newTodos = Object.assign({}, todos);\n        newTodos[format(currentDay, \"yyyy-MM-dd\")].splice(index, 1);\n        setTodos(newTodos);\n    };\n    const fetchGroup = () => __awaiter(void 0, void 0, void 0, function* () {\n        const userDocRef = doc(db, \"users\", user.email);\n        const userDoc = yield getDoc(userDocRef);\n        let membersnames = [];\n        if (userDoc.exists()) {\n            const groupCode = userDoc.data().group;\n            if (groupCode) {\n                setCode(groupCode);\n                setGroupExists(true);\n                const groupDocRef = doc(db, \"groups\", groupCode);\n                const groupDoc = yield getDoc(groupDocRef);\n                if (groupDoc.exists()) {\n                    const members = groupDoc\n                        .data()\n                        .members.filter((member) => member !== user.email);\n                    for (const mem of members) {\n                        const userDocRef = doc(db, \"users\", mem);\n                        const userDoc = yield getDoc(userDocRef);\n                        if (userDoc.exists()) {\n                            const membername = userDoc.data().name;\n                            membersnames.push({ name: membername, email: mem });\n                        }\n                        else {\n                            console.log(\"error finding member\");\n                        }\n                    }\n                    setMembers(membersnames);\n                    setLoading(false);\n                }\n            }\n        }\n    });\n    useEffect(() => {\n        fetchGroup();\n    }, []);\n    return (React.createElement(\"div\", { className: \"flex flex-col\" },\n        code && groupExists && (React.createElement(\"div\", null,\n            React.createElement(\"h1\", null, \" You're in an accountability group! Help friends reach goals!\"),\n            React.createElement(\"div\", { className: \"flex items-center my-2\" },\n                React.createElement(\"label\", { htmlFor: \"group-member-select\", className: \"w-32 mr-2\" }, \"See to do's for:\"),\n                React.createElement(\"select\", { id: \"group-member-select\", ref: selectRef, onChange: (e) => {\n                        setSelectedMember(e.target.value);\n                    }, className: \"p-2 w-full rounded border border-gray-200 outline-none\" },\n                    React.createElement(\"option\", { value: user.email }, \"meee!\"),\n                    members.map((member) => (React.createElement(\"option\", { key: member.email, value: member.email }, member.name))))),\n            React.createElement(\"hr\", { className: \"py-2\" }))),\n        selectedMember == user.email && (React.createElement(\"input\", { type: \"text\", placeholder: \"Add a new to do item...\", onKeyPress: handleKeyPress, className: \" p-2 w-80 rounded border border-gray-200 outline-none\" })),\n        React.createElement(\"ul\", { className: \"my-2  \" }, todos &&\n            todos[format(currentDay, \"yyyy-MM-dd\")] &&\n            todos[format(currentDay, \"yyyy-MM-dd\")].map((todo, index) => (React.createElement(\"li\", { key: index, className: \"flex items-center space-y-1 py-1 space-x-2 w-80\" },\n                React.createElement(\"div\", { className: \"flex items-center w-[250px]\" },\n                    React.createElement(\"input\", { type: \"checkbox\", disabled: selectedMember != user.email, checked: todo.completed, onChange: (event) => handleCheckboxChange(event, currentDay, index), className: \"mr-2\" }),\n                    React.createElement(\"span\", { className: todo.completed ? \"line-through\" : \"\" }, todo.text.length > 50\n                        ? `${todo.text.slice(0, 45)}...${todo.text.slice(-2)}`\n                        : todo.text)),\n                todo.completed && (React.createElement(\"div\", { className: \"bg-white rounded-lg flex flex-col place-self-end w-[160px] text-right justify-end items-end\" },\n                    React.createElement(\"span\", { className: \"text-[10px] w-full flex text-right justify-end items-end text-gray-400 place-self-end\" },\n                        \"Planned time:\",\n                        \" \",\n                        todo.plannedTime\n                            ? `${todo.plannedTime}${todo.timeFormat}`\n                            : \"n/a\"),\n                    React.createElement(\"span\", { className: \"text-[10px] w-full text-right justify-end items-end flex text-blue-500 place-self-end\" },\n                        \"Actual time:\",\n                        \" \",\n                        todo.actualTime\n                            ? `${todo.actualTime}${todo.acctimeFormat}`\n                            : \"n/a\"))),\n                !todo.completed && (React.createElement(\"div\", { className: \"flex items-end\" },\n                    React.createElement(\"input\", { disabled: selectedMember != user.email, type: \"text\", placeholder: \"Planned time\", value: todo.plannedTime, onChange: (event) => handlePlannedTimeChange(event, currentDay, index, true, null), onKeyPress: (e) => {\n                            const charCode = e.which ? e.which : e.keyCode;\n                            if (charCode > 31 && (charCode < 48 || charCode > 57)) {\n                                e.preventDefault();\n                            }\n                            else {\n                                handleClosePopup;\n                            }\n                        }, className: \"p-1 text-xs rounded-l w-[85px] border border-gray-400 outline-none placeholder:text-xs justify-end\" }),\n                    React.createElement(\"select\", { disabled: selectedMember != user.email, className: \"p-1 rounded-r max-w-[60px] border-y border-r border-gray-400 outline-none text-xs\", value: todos[format(currentDay, \"yyyy-MM-dd\")][index].timeFormat\n                            ? todos[format(currentDay, \"yyyy-MM-dd\")][index]\n                                .timeFormat\n                            : \"mins\", ref: selectRef, onChange: (e) => {\n                            // let switchTo = timeFormat == \"hrs\" ? \"mins\" : \"hrs\";\n                            // setTimeFormat(switchTo);\n                            handlePlannedTimeChange(e, currentDay, index, false, e.target.value ? e.target.value : \"mins\");\n                        } },\n                        React.createElement(\"option\", { value: \"hrs\" }, \"hrs\"),\n                        React.createElement(\"option\", { value: \"mins\" }, \"mins\")))),\n                selectedMember == user.email && (React.createElement(FaTrash, { className: \"text-cpink text-lg cursor-pointer\", onClick: () => handleDeleteClick(index) })))))),\n        showPopup && (React.createElement(\"div\", { className: \"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center\", style: { zIndex: 9999 }, onClick: (event) => {\n                if (event.target === event.currentTarget) {\n                    setShowPopup(false);\n                }\n            } },\n            React.createElement(\"div\", { className: \"bg-white  rounded-lg p-4 \" },\n                React.createElement(\"h1\", { className: \"p-1\" }, \"You're crushing your day!! \\uD83E\\uDD73\\uD83C\\uDF89\\uD83C\\uDF8A\"),\n                React.createElement(\"div\", { className: \"flex items-end\" },\n                    React.createElement(\"input\", { type: \"text\", placeholder: \"Actual time\", value: todos[format(currentDay, \"yyyy-MM-dd\")][selected].actualTime, onChange: (e) => handleActualTimeChange(e, currentDay, true, null), onKeyPress: (e) => {\n                            const charCode = e.which ? e.which : e.keyCode;\n                            if (charCode > 31 && (charCode < 48 || charCode > 57)) {\n                                e.preventDefault();\n                            }\n                            else {\n                                handleClosePopup;\n                            }\n                        }, className: \"p-1 text-xs rounded-l border placeholder:text-xs border-gray-400 outline-none justify-end \" }),\n                    React.createElement(\"select\", { className: \"p-1 rounded-r max-w-[60px] border-y border-r border-gray-400 outline-none text-xs\", value: todos[format(currentDay, \"yyyy-MM-dd\")][selected]\n                            .acctimeFormat\n                            ? todos[format(currentDay, \"yyyy-MM-dd\")][selected]\n                                .acctimeFormat\n                            : \"mins\", ref: selectRef2, onChange: (e) => {\n                            // let switchTo = acctimeFormat == \"hrs\" ? \"mins\" : \"hrs\";\n                            // setaccTimeFormat(switchTo);\n                            handleActualTimeChange(e, currentDay, false, e.target.value ? e.target.value : \"mins\");\n                        } },\n                        React.createElement(\"option\", { value: \"hrs\" }, \"hrs\"),\n                        React.createElement(\"option\", { value: \"mins\" }, \"mins\"))))))));\n};\nexport default TodoComp;\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport React from \"react\";\nimport { initializeApp } from \"firebase/app\";\nimport { getAuth, signInWithCredential, GoogleAuthProvider, } from \"firebase/auth\";\nimport { FIREBASE_CONFIG } from \"./const\";\nimport Navigation from \"./Router\";\nimport { getFirestore, doc, getDoc, } from \"firebase/firestore\";\nimport Signup from \"./components/Signup\";\nexport const firebase = initializeApp(FIREBASE_CONFIG);\nexport const auth = getAuth(firebase);\nconst db = getFirestore(firebase);\nconst FirebaseApp = (props) => {\n    const [user, setUser] = React.useState(undefined);\n    const [isLogin, setIsLogin] = React.useState(true);\n    const [name, setName] = React.useState(\"\");\n    const [age, setAge] = React.useState(\"\");\n    const [reason, setReason] = React.useState(\"\");\n    const [firstTime, setFirstTime] = React.useState(null);\n    const signIn = (e) => {\n        e.preventDefault();\n        chrome.identity.getAuthToken({ interactive: true }, (token) => {\n            if (chrome.runtime.lastError || !token) {\n                alert(`SSO ended with an error: ${JSON.stringify(chrome.runtime.lastError)}`);\n                return;\n            }\n            signInWithCredential(auth, GoogleAuthProvider.credential(null, token))\n                .then((res) => {\n                console.log(\"signed in!\");\n            })\n                .catch((err) => {\n                alert(`SSO ended with an error: ${err}`);\n            });\n        });\n    };\n    React.useEffect(() => {\n        auth.onAuthStateChanged((user) => {\n            setUser(user && user.uid ? user : null);\n        });\n    }, []);\n    const checkIfFirstTime = () => __awaiter(void 0, void 0, void 0, function* () {\n        const userRef = doc(db, \"users\", user.email);\n        const docSnap = yield getDoc(userRef);\n        if (docSnap.exists()) {\n            console.log(\"User already exists:\", docSnap.data());\n            setFirstTime(false);\n        }\n        else {\n            console.log(\"User does not already exist:\");\n            setFirstTime(true);\n        }\n    });\n    if (undefined === user)\n        return React.createElement(\"h1\", null, \"Loading...\");\n    //return this when there is a user\n    if (user != null) {\n        checkIfFirstTime();\n        return (React.createElement(\"div\", { className: \"w-full h-full\" }, firstTime === null ? (React.createElement(\"div\", { className: \"flex items-center justify-center h-full w-full\" },\n            React.createElement(\"div\", { className: \"animate-spin rounded-full h-16 w-16 border-t-2 border-b-2 border-gray-900\" }))) : firstTime ? (React.createElement(Signup, { user: user, db: db, setFirstTime: setFirstTime })) : (React.createElement(Navigation, { user: user, auth: auth, db: db }))));\n    }\n    //return this when there is no user\n    return (React.createElement(\"div\", { className: \"flex place-self-center flex-col w-full 2-full place-items-center items-center justify-center h-[400px]\" },\n        React.createElement(\"div\", { className: \"flex items-center gap-2\" },\n            React.createElement(\"img\", { src: \"logo128x128.png\", alt: \"MoodSpace logo\", className: \"w-10 mb-8\" }),\n            React.createElement(\"h1\", { className: \"text-xl font-serif font-bold mb-6\" }, \"Welcome to MoodSpace\")),\n        React.createElement(\"button\", { className: \"bg-teel w-32 h-10 text-center text-white font-bold rounded hover:bg-teal-600\", onClick: signIn }, \"Sign In with Google\")));\n};\nexport default FirebaseApp;\n","import React from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport \"../assets/css/tailwind.css\";\nimport Popup from \"./Popup\";\nfunction init() {\n    const appContainer = document.createElement(\"div\");\n    document.body.appendChild(appContainer);\n    if (!appContainer) {\n        throw new Error(\"Cannot find appContainer\");\n    }\n    const root = createRoot(appContainer);\n    root.render(React.createElement(Popup, null));\n}\ninit();\n","export const FIREBASE_CONFIG = {\n  apiKey: process.env.REACT_APP_apiKey,\n  authDomain: process.env.REACT_APP_authDomain,\n  projectId: process.env.REACT_APP_projectId,\n  storageBucket: process.env.REACT_APP_storageBucket,\n  messagingSenderId: process.env.REACT_APP_messagingSenderId,\n  appId: process.env.REACT_APP_appId,\n  measurementId: process.env.REACT_APP_measurementId,\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t\"popup\": 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkmoodspace\"] = self[\"webpackChunkmoodspace\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","__webpack_require__.nc = undefined;","","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [\"vendors-node_modules_css-loader_dist_runtime_api_js-node_modules_css-loader_dist_runtime_sour-b53f7e\",\"vendors-node_modules_date-fns_esm_format_index_js-node_modules_react-icons_bs_index_esm_js-no-d2ac6a\",\"src_assets_css_tailwind_css\"], () => (__webpack_require__(\"./src/popup/index.tsx\")))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n",""],"names":[],"sourceRoot":""}