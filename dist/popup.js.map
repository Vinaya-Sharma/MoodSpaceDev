{"version":3,"file":"popup.js","mappings":";;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;ACvDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACrLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;ACnxtnjlGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;ACrFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACxzHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACvEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACRA;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACPA;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACNA;AACA;AACA;AACA;AACA;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AChDA;;;;;AEAA;AACA;AACA;AACA;AACA","sources":["webpack://moodspace/./src/popup/Popup.tsx","webpack://moodspace/./src/popup/Router.tsx","webpack://moodspace/./src/popup/ai/Coach.tsx","webpack://moodspace/./src/popup/analytics/ActivitiyCorrelations.tsx","webpack://moodspace/./src/popup/analytics/MoodChart.tsx","webpack://moodspace/./src/popup/components/Analytics.tsx","webpack://moodspace/./src/popup/components/Calendar.tsx","webpack://moodspace/./src/popup/components/Header.tsx","webpack://moodspace/./src/popup/components/Intentions.tsx","webpack://moodspace/./src/popup/components/JournalRouter.tsx","webpack://moodspace/./src/popup/components/Signup.tsx","webpack://moodspace/./src/popup/features/AccountabilityPopup.tsx","webpack://moodspace/./src/popup/features/Calendar.Comp.tsx","webpack://moodspace/./src/popup/features/ExportPopup.tsx","webpack://moodspace/./src/popup/features/FeelingsReasons.tsx","webpack://moodspace/./src/popup/features/Journal.tsx","webpack://moodspace/./src/popup/features/MoodPicker.tsx","webpack://moodspace/./src/popup/features/TodoComp.tsx","webpack://moodspace/./src/popup/features/UnlockJournal.tsx","webpack://moodspace/./src/popup/firebaseApp.tsx","webpack://moodspace/./src/popup/index.tsx","webpack://moodspace/./src/popup/const.js","webpack://moodspace/ignored|/Users/vinayasharma/Desktop/moodSpacee/node_modules/crypto-js|crypto","webpack://moodspace/webpack/bootstrap","webpack://moodspace/webpack/runtime/chunk loaded","webpack://moodspace/webpack/runtime/compat get default export","webpack://moodspace/webpack/runtime/define property getters","webpack://moodspace/webpack/runtime/global","webpack://moodspace/webpack/runtime/hasOwnProperty shorthand","webpack://moodspace/webpack/runtime/make namespace object","webpack://moodspace/webpack/runtime/node module decorator","webpack://moodspace/webpack/runtime/jsonp chunk loading","webpack://moodspace/webpack/runtime/nonce","webpack://moodspace/webpack/before-startup","webpack://moodspace/webpack/startup","webpack://moodspace/webpack/after-startup"],"sourcesContent":["import React from \"react\";\nimport FirebaseApp from \"./firebaseApp\";\nfunction Popup() {\n    return (React.createElement(\"div\", { className: \"w-96 max-w-96 overflow-scroll flex\" },\n        React.createElement(FirebaseApp, null)));\n}\nexport default Popup;\n","import React, { useState } from \"react\";\nimport Calendar from \"./components/Calendar\";\nimport Intentions from \"./components/Intentions\";\nimport Analytics from \"./components/Analytics\";\nimport { FaCalendarAlt, FaCheck, FaChartBar, FaCoffee } from \"react-icons/fa\";\nimport { CgGym } from \"react-icons/cg\";\nimport Header from \"./components/Header\";\nimport Coach from \"./ai/Coach\";\nfunction Navigation({ user, auth, db }) {\n    const [usePassword, setUsePassword] = useState(true);\n    const tabs = [\n        {\n            name: \"Calendar\",\n            icon: React.createElement(FaCalendarAlt, null),\n            component: React.createElement(Calendar, { db: db, user: user }),\n        },\n        {\n            name: \"Reflect\",\n            icon: React.createElement(FaCheck, null),\n            component: (React.createElement(Intentions, { db: db, user: user, usePassword: usePassword, setUsePassword: setUsePassword })),\n        },\n        {\n            name: \"Analytics\",\n            icon: React.createElement(FaChartBar, null),\n            component: React.createElement(Analytics, { db: db, user: user }),\n        },\n        {\n            name: \"Coach\",\n            icon: React.createElement(CgGym, null),\n            component: React.createElement(Coach, { db: db, user: user }),\n        },\n        // {\n        //   name: \"Accountability\",\n        //   icon: <BsPerson />,\n        //   component: <Accountability db={db} user={user} />,\n        // },\n    ];\n    const [activeTab, setActiveTab] = useState(tabs[0]);\n    const handleTabClick = (tab) => {\n        setActiveTab(tab);\n    };\n    return (React.createElement(\"div\", { className: \"flex w-full flex-col overflow-scroll h-[600px]\" },\n        React.createElement(Header, { user: user, auth: auth, db: db, usePassword: usePassword, setUsePassword: setUsePassword }),\n        React.createElement(\"hr\", null),\n        React.createElement(\"div\", { className: \"flex p-8 min-h-[450px]\" }, activeTab.component),\n        React.createElement(\"div\", { className: \"w-full flex overflow-y-auto  justify-center items-center bg-teel text-white p-2 fixed bottom-0\" },\n            tabs.map((tab) => (React.createElement(\"button\", { key: tab.name, className: `flex flex-col items-center mr-4 ${activeTab.name === tab.name ? \"text-white\" : \"text-gray-300\"}`, onClick: () => handleTabClick(tab) },\n                tab.icon,\n                React.createElement(\"span\", null, tab.name)))),\n            React.createElement(\"a\", { target: \"_blank\", rel: \"noopener noreferrer\", href: \"https://www.buymeacoffee.com/vinaya\", className: `flex  flex-col items-center mr-4 hover:text-white\n          text-gray-300\n            ` },\n                React.createElement(FaCoffee, null),\n                React.createElement(\"span\", null, \"Coffee\")))));\n}\nexport default Navigation;\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport React, { useEffect, useState } from \"react\";\nimport { Configuration, OpenAIApi } from \"openai\";\nimport { doc, getDoc } from \"firebase/firestore\";\nimport { FaArrowAltCircleLeft } from \"react-icons/fa\";\nconst Chatbot = ({ db, user }) => {\n    const [input, setInput] = useState(\"\");\n    const [messageToDisplay, setMessageToDisplay] = useState(React.createElement(\"div\", null,\n        React.createElement(\"h1\", null,\n            \"Welcome to chat!\",\n            React.createElement(\"br\", null),\n            React.createElement(\"br\", null),\n            React.createElement(\"span\", { className: \"underline\" }, \"At MoodSpace we're here for you and we want to help you reach your goals. \\uD83C\\uDFAF\"),\n            \" \",\n            React.createElement(\"br\", null),\n            React.createElement(\"br\", null),\n            \"Everyones goals are different, from getting better grades, to learning a new hobby to just being happier. Wherever you are in life the MoodSpace coach wants to help.\",\n            React.createElement(\"br\", null),\n            React.createElement(\"br\", null),\n            \"Break down obstacles, discuss feelings and set actionable goals here!\"),\n        React.createElement(\"div\", { className: \"w-full justify-center flex items-center place-items-center\" },\n            React.createElement(\"button\", { onClick: () => {\n                    setPopup(false);\n                }, className: \"px-4 place-self-center py-2 bg-teel text-white rounded-lg\" }, \"Start!\"))));\n    const [messages, setMessages] = useState([]);\n    const [popup, setPopup] = useState(true);\n    const [theUser, setTheUser] = useState({\n        name: \"beautiful\",\n        moodReasons: {\n            \"2023-4-23\": [\"family\", \"school\", \"events\"],\n        },\n    });\n    let options;\n    let oppsDif = 0;\n    useEffect(() => {\n        const getData = () => __awaiter(void 0, void 0, void 0, function* () {\n            console.log(user.email);\n            const userDocRef = doc(db, \"users\", user.email);\n            const userDoc = yield getDoc(userDocRef);\n            if (userDoc.exists()) {\n                const userInfo = userDoc.data();\n                setTheUser({\n                    name: userInfo.name,\n                    moodReasons: userInfo.moodReasons,\n                });\n                console.log(userInfo);\n                setMessages([\n                    {\n                        content: `Hi ${userInfo.name}, how can I help you today! 🚀 options: [Set a goal, Reflect on my day, Get some inspiration, Talk, Therapy]`,\n                        role: \"assistant\",\n                    },\n                ]);\n            }\n            else {\n                console.log(\"no user info\");\n            }\n        });\n        getData();\n    }, []);\n    const configuration = new Configuration({\n        apiKey: process.env.REACT_APP_OPENAI_API,\n    });\n    const openai = new OpenAIApi(configuration);\n    const sendMessage = (userInput) => __awaiter(void 0, void 0, void 0, function* () {\n        options = [];\n        const message = {\n            content: userInput,\n            role: \"user\",\n        };\n        setInput(\"\");\n        try {\n            const response = yield openai.createChatCompletion({\n                model: \"gpt-3.5-turbo\",\n                temperature: 0.4,\n                max_tokens: 75,\n                top_p: 1,\n                messages: [\n                    {\n                        role: \"system\",\n                        content: \"you are an ai personal coach your job is to 1.)guide the user through setting SMART goals,  2.)guide the user thought CBT to address mental health and wellness concerns.\",\n                    },\n                    {\n                        role: \"system\",\n                        content: \"lead the user thought things like Cognitive Restructuring, distorted thinking, Behavioral Activation, Graded Exposure, Problem-Solving, Thought Record, Relaxation Techniques, Goal Setting, Self-Monitoring\",\n                    },\n                    {\n                        role: \"system\",\n                        content: \"be short and consise, mimic user writing style, do not write a lot at once, be funny, use emojis and end with Good luck! when your done helping.\",\n                    },\n                    {\n                        role: \"system\",\n                        content: \"end each response you write with a list of short potential responses for the user to pick from. like this options:[]\",\n                    },\n                    {\n                        role: \"assistant\",\n                        content: `hi, i'm your ai personal coach. whats your name 🤔. options: [${theUser.name}, your mom, 🤷🏼‍♀️]`,\n                    },\n                    {\n                        role: \"user\",\n                        content: `${theUser.name}`,\n                    },\n                    {\n                        role: \"assistant\",\n                        content: \"nice to meet you 👋 how are you. options: [good, great, amazinnnng]\",\n                    },\n                    {\n                        role: \"user\",\n                        content: \"amazinnnng\",\n                    },\n                    ...messages,\n                    { role: \"user\", content: userInput },\n                ],\n            });\n            const botMessage = {\n                content: response.data.choices[0].message.content,\n                role: \"assistant\",\n            };\n            setMessages([...messages, message, botMessage]);\n        }\n        catch (error) {\n            console.error(error);\n            setPopup(true);\n            setMessageToDisplay(React.createElement(\"h1\", null,\n                \"Hey sorry... gimme a second to think. Trying to brainstorm the best way to help you! \\uD83E\\uDDD0\",\n                React.createElement(\"br\", null)));\n        }\n    });\n    const handleKeyPress = (event, userInput) => {\n        if (event.key === \"Enter\") {\n            sendMessage(userInput);\n        }\n    };\n    return (React.createElement(\"div\", { className: \"h-screen mx-auto item-center justify-center w-full pb-12 p-4\" },\n        popup && (React.createElement(\"div\", { className: \"fixed inset-0 bg-black bg-opacity-50 w-full flex items-center justify-center\", style: { zIndex: 9999 }, onClick: (event) => {\n                if (event.target === event.currentTarget) {\n                    setPopup(false);\n                }\n            } },\n            React.createElement(\"div\", { className: \"bg-white w-full mx-2 rounded-lg p-4 \" }, messageToDisplay))),\n        React.createElement(\"div\", { className: \"flex flex-col flex-grow pb-52 overflow-y-auto\" },\n            messages.map((message, index) => (React.createElement(\"div\", { key: index, className: `flex mb-2 ${message.role === \"user\" ? \"justify-end\" : \"justify-start\"}` },\n                React.createElement(\"div\", { className: `bg-gray-200 py-1 px-3 rounded-lg ${message.role === \"user\" ? \"bg-blue-500 text-white\" : \"\"}` }, message.content.includes(\"options: \") ? (React.createElement(\"div\", null, (() => {\n                    const optionsStartIndex = message.content.indexOf(\"[\");\n                    const optionsEndIndex = message.content.indexOf(\"]\", optionsStartIndex);\n                    oppsDif = optionsEndIndex - optionsStartIndex;\n                    const optionsList = message.content.slice(optionsStartIndex + 1, optionsEndIndex);\n                    options = optionsList.split(\", \");\n                    if (oppsDif > 75) {\n                        options.pop();\n                    }\n                    else if (oppsDif < 5) {\n                        options = [];\n                    }\n                    return message.content.slice(0, optionsStartIndex - 9);\n                })())) : (message.content))))),\n            React.createElement(\"div\", { className: \"flex flex-col items-center px-10 w-full place-self-center fixed bottom-10 left-0  p-4 bg-white\" },\n                React.createElement(\"div\", { className: \"flex w-full place-self-center flex-wrap text-center items-center \" }, options &&\n                    options.length > 0 &&\n                    options.map((option, index) => (React.createElement(\"button\", { key: index, className: \"inline-block px-2 py-1 mr-2 mb-2 bg-blue-500 text-white rounded-lg\", onClick: () => {\n                            console.log(option);\n                            setInput(option);\n                            sendMessage(option);\n                        } }, option)))),\n                React.createElement(\"div\", { className: \"w-full flex place-self-center items-center\" },\n                    React.createElement(\"input\", { type: \"text\", placeholder: \"Type your message here...\", value: input, onChange: (e) => setInput(e.target.value), onKeyPress: (e) => {\n                            handleKeyPress(e, input);\n                        }, className: \"flex-grow py-2 px-4 mr-2 border border-gray-300 rounded-lg focus:outline-none focus:border-blue-500\" }),\n                    React.createElement(\"button\", { onClick: () => {\n                            sendMessage(input);\n                        }, className: \"px-4 py-2 bg-blue-500 text-white rounded-lg\" }, \"Send\"),\n                    React.createElement(\"button\", { className: \"inline-block px-2 py-2 ml-2 text-[16px]  bg-red-500 text-white rounded-lg\" },\n                        React.createElement(FaArrowAltCircleLeft, { width: 12 })))))));\n};\nexport default Chatbot;\n","import React, { useEffect, useState } from \"react\";\nconst ActivityCorrelations = ({ moodByDayData, activitiesByDay, }) => {\n    const [selectedEmotion, setSelectedEmotion] = useState(null);\n    const [activities, setActivities] = useState([]);\n    const emotions = [\n        { emoji: \"🤩\", text: \"ahhh\", color: \"blue-900\" },\n        { emoji: \"😊\", text: \"nicee\", color: \"blue-500\" },\n        { emoji: \"😐\", text: \"okey\", color: \"teal-500\" },\n        { emoji: \"😔\", text: \"bummy\", color: \"orange-500\" },\n        { emoji: \"😣\", text: \"rotten\", color: \"red-500\" },\n    ];\n    const handleEmotionSelect = (emoji) => {\n        setSelectedEmotion(emoji);\n    };\n    //go through the moodByDayData find the days where the mood is the selectedmood and then for thoose days look at the moodreasons and increment the count for those reasons each time they isFunctionOrConstructorTypeNode.\n    const getActivitiesForEmotion = (mood) => {\n        const activities = {};\n        Object.entries(moodByDayData).forEach(([date, moodEmoji]) => {\n            if (moodEmoji === mood) {\n                const dateActivities = activitiesByDay[date] || [];\n                dateActivities.forEach((activity) => {\n                    activities[activity] = (activities[activity] || 0) + 1;\n                });\n            }\n        });\n        return activities;\n    };\n    useEffect(() => {\n        if (selectedEmotion) {\n            const activitiesForEmotion = getActivitiesForEmotion(selectedEmotion);\n            const sortedActivities = Object.entries(activitiesForEmotion)\n                .sort((a, b) => b[1] - a[1])\n                .map(([activity, count]) => ({ activity, count }));\n            setActivities(sortedActivities);\n        }\n        else {\n            setActivities([]);\n        }\n    }, [selectedEmotion]);\n    return (React.createElement(\"div\", { className: \"w-80 \" },\n        React.createElement(\"div\", { className: \"relative justify-between flex place-items-center items-center mb-4\" },\n            React.createElement(\"h2\", { className: \"text-md mt-2 font-bold mb-4\" }, \"Activity Correlations\"),\n            React.createElement(\"div\", { className: \"relative\" },\n                React.createElement(\"select\", { className: \"appearance-none border min-w-[150px] w-full border-gray-300 rounded-lg py-2 px-4 leading-tight focus:outline-none focus:bg-white focus:border-gray-400\", value: selectedEmotion || \"\", onChange: (e) => handleEmotionSelect(e.target.value) },\n                    React.createElement(\"option\", { value: \"\" }, \"Select a Mood... \"),\n                    emotions.map(({ emoji, text, color }) => (React.createElement(\"option\", { className: \"flex gap-2 items-center\", key: emoji, value: emoji }, `${emoji} ${text}`)))))),\n        selectedEmotion && (activities === null || activities === void 0 ? void 0 : activities.length) > 0 ? (React.createElement(\"ul\", { className: \"flex justify-center items-center flex-wrap w-full\" }, activities.map(({ activity, count }) => (React.createElement(\"li\", { key: activity, className: \"mb-2\" },\n            React.createElement(\"div\", { className: `w-auto mx-2 justify-center h-6 m-1 py-1 px-2 text-xs rounded-full bg-teel text-white relative` },\n                activity,\n                React.createElement(\"span\", { className: \"absolute -top-2 -right-2 w-3 h-3 rounded-full bg-white p-2 border-gray-400 border-[1px] text-teel flex justify-center items-center text-xs font-bold\" }, count))))))) : (React.createElement(\"p\", null, \"Please select an emotion to see associated activities.\"))));\n};\nexport default ActivityCorrelations;\n","import React from \"react\";\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, } from \"recharts\";\nconst moods = [\n    { emoji: \"🤩\", text: \"ahhh\", color: \"blue\", count: 4 },\n    { emoji: \"😊\", text: \"nicee\", color: \"green\", count: 3 },\n    { emoji: \"😐\", text: \"okey\", color: \"orange\", count: 2 },\n    { emoji: \"😔\", text: \"bummy\", color: \"red\", count: 1 },\n    { emoji: \"😣\", text: \"rotten\", color: \"black\", count: 0 },\n];\nconst monthsOfYear = [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\",\n];\nconst getChartData = (moodData) => {\n    const chartData = [];\n    const date = new Date();\n    const year = date.getFullYear();\n    const month = date.getMonth();\n    const daysInMonth = new Date(year, month + 1, 0).getDate();\n    for (let i = 1; i <= daysInMonth; i++) {\n        const dateString = `${year}-${month + 1}-${i}`;\n        const mood = moodData[dateString] ? moodData[dateString] : \"😐\";\n        let moodIndex = 0;\n        for (let j = 0; j < moods.length; j++) {\n            if (moods[j].emoji === mood) {\n                moodIndex = moods[j].count;\n                break;\n            }\n        }\n        chartData.push({ date: i, mood: moodIndex * 5 });\n    }\n    return chartData;\n};\nconst MoodChart = ({ data }) => {\n    const chartData = getChartData(data);\n    return (React.createElement(\"div\", null,\n        React.createElement(\"h2\", { className: \"text-md mt-2 font-bold mb-4\" }, \"Monthly Mood-o-Meter\"),\n        React.createElement(LineChart, { width: 325, height: 250, data: chartData, margin: { top: 5, right: 20, bottom: 5, left: -30 } },\n            React.createElement(CartesianGrid, { strokeDasharray: \"3 3\" }),\n            React.createElement(XAxis, { dataKey: \"date\", tickFormatter: (value) => value.toString(), label: {\n                    value: monthsOfYear[new Date().getMonth()],\n                    position: \"bottom\",\n                    offset: -8,\n                } }),\n            React.createElement(YAxis, { dataKey: \"mood\", tickFormatter: (value) => [\"😣\", \"😔\", \"😐\", \"😊\", \"🤩\"][value / 5], domain: [0, 20], tick: {\n                    fontSize: 16,\n                } }),\n            React.createElement(Tooltip, null),\n            React.createElement(Line, { type: \"monotone\", dataKey: \"mood\", stroke: \"#8884d8\", activeDot: { r: 8 }, dot: { r: 4 }, strokeWidth: 2 }))));\n};\nexport default MoodChart;\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport React, { useEffect, useState } from \"react\";\nimport MoodChart from \"../analytics/MoodChart\";\nimport ActivityCorrelations from \"../analytics/ActivitiyCorrelations\";\nimport { collection, doc, getDoc, onSnapshot } from \"firebase/firestore\";\nconst Analytics = ({ db, user }) => {\n    const [moodByDayData, setMoodByDayData] = useState({});\n    const [reasonsByDayData, setReasonsByDayData] = useState({});\n    const gettingData = () => __awaiter(void 0, void 0, void 0, function* () {\n        const docRef = doc(db, \"users\", user.email);\n        const docSnap = yield getDoc(docRef);\n        if (docSnap.exists()) {\n            const data = docSnap.data().moodReasons;\n            if (data) {\n                setReasonsByDayData(data);\n            }\n        }\n        else {\n            // docSnap.data() will be undefined in this case\n            console.log(\"No such document!\");\n        }\n    });\n    useEffect(() => {\n        const moodByDayRef = collection(db, \"users\", user.email, \"moodByDay\");\n        const unsubscribe = onSnapshot(moodByDayRef, (querySnapshot) => {\n            const moodByDay = {};\n            querySnapshot.forEach((doc) => {\n                const date = doc.id;\n                const mood = doc.data();\n                moodByDay[date] = mood.emoji;\n            });\n            setMoodByDayData(moodByDay);\n        });\n        return unsubscribe;\n    }, [user, db]);\n    //setting activities\n    useEffect(() => {\n        gettingData();\n    }, []);\n    return (React.createElement(\"div\", { className: \"flex w-80 flex-col gap-4 mb-12  \" },\n        React.createElement(\"h2\", { className: \"text-2xl flex flex-col font-medium font-serif flex-start justify-start w-full text-left\" },\n            \"Emojinal Intelligence\",\n            React.createElement(\"span\", { className: \"text-sm font-bold\" }, \"Your Mood Stats and Streaks!\")),\n        React.createElement(MoodChart, { data: moodByDayData }),\n        React.createElement(ActivityCorrelations, { moodByDayData: moodByDayData, activitiesByDay: reasonsByDayData }),\n        React.createElement(\"div\", { className: \"mb-12 text-white \" }, \".\"),\n        React.createElement(\"div\", { className: \"mb-12 text-white \" }, \".\")));\n};\nexport default Analytics;\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport React, { useState, useEffect } from \"react\";\nimport CalendarComp from \"../features/Calendar.Comp\";\nimport { collection, doc, onSnapshot, getDoc, writeBatch, } from \"firebase/firestore\";\nconst Calendar = ({ db, user }) => {\n    const [year, setYear] = useState(new Date().getFullYear());\n    const [month, setMonth] = useState(new Date().getMonth());\n    const [moodByDay, setMoodByDay] = useState({});\n    const [message, setMessage] = useState(\"\");\n    const getMessage = () => __awaiter(void 0, void 0, void 0, function* () {\n        const messagesRef = doc(db, \"message\", \"message\");\n        const theMessage = (yield getDoc(messagesRef)).data().text;\n        if (theMessage) {\n            setMessage(theMessage);\n        }\n        else {\n            setMessage(\"\");\n        }\n    });\n    // Load mood data from local storage on mount\n    useEffect(() => {\n        const moodByDayRef = collection(db, \"users\", user.email, \"moodByDay\");\n        const unsubscribe = onSnapshot(moodByDayRef, (querySnapshot) => {\n            const moodByDay = {};\n            querySnapshot.forEach((doc) => {\n                const date = doc.id;\n                const mood = doc.data();\n                moodByDay[date] = mood.emoji;\n            });\n            setMoodByDay(moodByDay);\n            getMessage();\n        });\n        return unsubscribe;\n    }, [user, db]);\n    const writetodatabase = () => __awaiter(void 0, void 0, void 0, function* () {\n        try {\n            const batch = writeBatch(db);\n            Object.keys(moodByDay).forEach((date) => {\n                const moodRef = doc(db, \"users\", user.email, \"moodByDay\", date);\n                batch.set(moodRef, { emoji: moodByDay[date] });\n            });\n            yield batch.commit();\n        }\n        catch (e) {\n            console.error(\"Error adding documents: \", e);\n        }\n    });\n    // Save mood data to local storage on each update\n    useEffect(() => {\n        writetodatabase();\n    }, [moodByDay]);\n    const handlePrevMonth = () => {\n        if (month === 0) {\n            setMonth(11);\n            setYear(year - 1);\n        }\n        else {\n            setMonth(month - 1);\n        }\n    };\n    const handleNextMonth = () => {\n        if (month === 11) {\n            setMonth(0);\n            setYear(year + 1);\n        }\n        else {\n            setMonth(month + 1);\n        }\n    };\n    return (React.createElement(\"div\", { className: \"justify-center font-serif w-80 h-[475px]\" },\n        message && (React.createElement(\"div\", { className: \"p-2 mb-4 bg-teel bg-opacity-40  rounded-lg\" }, message)),\n        React.createElement(\"div\", { className: \"flex justify-between items-center mb-4\" },\n            React.createElement(\"div\", null,\n                \" \",\n                React.createElement(\"h2\", { className: \"text-2xl font-medium font-serif text-teal\" }, new Date(year, month).toLocaleDateString(\"en-US\", {\n                    month: \"long\",\n                    year: \"numeric\",\n                })),\n                React.createElement(\"h1\", { className: \"text-xs mt-1 font-bold max-w-[225px]\" }, \"Log Feelings Once Daily!\")),\n            React.createElement(\"div\", null,\n                React.createElement(\"button\", { className: \"bg-teel rounded-full px-3 py-1 mr-2 text-white hover:bg-opacity-80 transition-colors\", onClick: handlePrevMonth }, \"<\"),\n                React.createElement(\"button\", { className: \"bg-teel rounded-full px-3 py-1 text-white hover:bg-opacity-80 transition-colors\", onClick: handleNextMonth }, \">\"))),\n        React.createElement(CalendarComp, { year: year, month: month, moodByDay: moodByDay, setMoodByDay: setMoodByDay, db: db, user: user })));\n};\nexport default Calendar;\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport React, { useEffect, useState } from \"react\";\nimport { BsFillGearFill } from \"react-icons/bs\";\nimport AccountabilityPopup from \"../features/AccountabilityPopup\";\nimport ExportPopup from \"../features/ExportPopup\";\nimport { doc, getDoc, setDoc } from \"firebase/firestore\";\nfunction Header({ user, auth, db, usePassword, setUsePassword }) {\n    const [showSettings, setShowSettings] = useState(false);\n    const [showPopup, setShowPopup] = useState(false);\n    const [showExport, setShowExport] = useState(false);\n    const handleOpting = () => __awaiter(this, void 0, void 0, function* () {\n        const userDocRef = doc(db, \"users\", user.email);\n        yield setDoc(userDocRef, { usePassword: !usePassword, hashedJournalPassword: null }, { merge: true });\n        setUsePassword(!usePassword);\n    });\n    const handleLogout = () => {\n        chrome.identity.getAuthToken({ interactive: true }, (token) => {\n            if (chrome.runtime.lastError) {\n                console.error(chrome.runtime.lastError);\n            }\n            else if (token) {\n                chrome.identity.removeCachedAuthToken({ token: token }, () => {\n                    auth\n                        .signOut()\n                        .then(() => { })\n                        .catch((error) => {\n                        console.error(\"Error signing out: \", error);\n                    });\n                });\n            }\n            else {\n                auth\n                    .signOut()\n                    .then(() => { })\n                    .catch((error) => {\n                    console.error(\"Error signing out: \", error);\n                });\n            }\n        });\n    };\n    useEffect(() => {\n        fetchGroup();\n    }, []);\n    const fetchGroup = () => __awaiter(this, void 0, void 0, function* () {\n        const userDocRef = doc(db, \"users\", user.email);\n        const userDoc = yield getDoc(userDocRef);\n        if (userDoc.exists()) {\n            const usePass = userDoc.data().usePassword != null ? userDoc.data().usePassword : true;\n            setUsePassword(usePass);\n        }\n    });\n    return (React.createElement(\"div\", { className: \"w-full p-4 flex items-center justify-between\" },\n        React.createElement(\"h1\", { className: \"text-sm font-medium font-serif \" }, \"MoodSpace\"),\n        React.createElement(\"div\", { className: \"relative mr-4\" },\n            React.createElement(BsFillGearFill, { className: \"text-sm cursor-pointer\", onClick: () => setShowSettings(!showSettings) }),\n            showSettings && (React.createElement(\"div\", { className: \"absolute right-2 mt-2 py-2 w-48 bg-white rounded-lg shadow-xl z-10\" },\n                React.createElement(\"div\", { className: \"px-4 py-2 font-medium text-gray-800\" },\n                    \"Signed in as: \",\n                    user.email),\n                React.createElement(\"div\", { onClick: () => {\n                        setShowPopup(true);\n                        setShowSettings(false);\n                    }, className: \"hover:text-teel cursor-pointer px-4 py-2 font-medium text-gray-800\" }, \"Accountability Groups\"),\n                React.createElement(\"div\", { onClick: () => {\n                        handleOpting();\n                    }, className: \"hover:text-teel cursor-pointer px-4 py-2 font-medium text-gray-800\" },\n                    \"Opt \",\n                    !usePassword ? \"in for\" : \"out of\",\n                    \" journal lock\"),\n                React.createElement(\"div\", { onClick: () => {\n                        setShowExport(true);\n                        setShowSettings(false);\n                    }, className: \"hover:text-teel cursor-pointer px-4 py-2 font-medium text-gray-800\" }, \"Export Data\"),\n                React.createElement(\"div\", { className: \"py-2 border-t border-gray-300\" },\n                    React.createElement(\"button\", { className: \"block w-full text-left px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 hover:text-gray-900\", onClick: handleLogout }, \"Logout\"))))),\n        showPopup && (React.createElement(AccountabilityPopup, { user: user, db: db, setShowPopup: setShowPopup })),\n        showExport && (React.createElement(ExportPopup, { user: user, db: db, setShowPopup: setShowExport }))));\n}\nexport default Header;\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport React, { useState, useEffect } from \"react\";\nimport Journal from \"../features/Journal\";\nimport TodoComp from \"../features/TodoComp\";\nimport { format } from \"date-fns\";\nimport { collection, doc, getDoc, onSnapshot, writeBatch, } from \"firebase/firestore\";\nimport CryptoJS from \"crypto-js\";\nimport JournalRouter from \"./JournalRouter\";\nconst Intentions = ({ db, user, usePassword, setUsePassword }) => {\n    const [currentDay, setCurrentDay] = useState(new Date());\n    const [access, setAccess] = useState(false);\n    const [password, setPassword] = useState(\"\");\n    // getting journals + todos\n    const [journalByDay, setJournalByDay] = useState({});\n    const [todosData, setTodosData] = useState({});\n    const [showJournal, setShowJournal] = useState(false);\n    const [selectedMember, setSelectedMember] = useState(user.email);\n    const [code, setCode] = useState(\"\");\n    const [members, setMembers] = useState([]);\n    const [groupExists, setGroupExists] = useState(false);\n    const [loading, setLoading] = useState(true);\n    const [journalInput, setJournalInput] = useState(journalByDay[format(currentDay, \"yyyy-MM-dd\")]\n        ? journalByDay[format(currentDay, \"yyyy-MM-dd\")].content\n        : \"\");\n    useEffect(() => {\n        setJournalInput(journalByDay[format(currentDay, \"yyyy-MM-dd\")]\n            ? journalByDay[format(currentDay, \"yyyy-MM-dd\")].content\n            : \"\");\n    }, [currentDay]);\n    const fetchGroup = () => __awaiter(void 0, void 0, void 0, function* () {\n        const userDocRef = doc(db, \"users\", user.email);\n        const userDoc = yield getDoc(userDocRef);\n        let membersnames = [];\n        if (userDoc.exists()) {\n            const groupCode = userDoc.data().group;\n            const usePass = userDoc.data().usePassword != null ? userDoc.data().usePassword : true;\n            setUsePassword(usePass);\n            if (groupCode) {\n                setCode(groupCode);\n                setGroupExists(true);\n                const groupDocRef = doc(db, \"groups\", groupCode);\n                const groupDoc = yield getDoc(groupDocRef);\n                if (groupDoc.exists()) {\n                    const members = groupDoc\n                        .data()\n                        .members.filter((member) => member !== user.email);\n                    for (const mem of members) {\n                        const userDocRef = doc(db, \"users\", mem);\n                        const userDoc = yield getDoc(userDocRef);\n                        if (userDoc.exists()) {\n                            const membername = userDoc.data().name;\n                            const showTodos = userDoc.data().shareTodos;\n                            const showJournals = userDoc.data().shareJournals;\n                            membersnames.push({\n                                name: membername,\n                                email: mem,\n                                showTodos: showTodos,\n                                showJournals: showJournals,\n                            });\n                        }\n                        else {\n                            console.log(\"error finding member\");\n                        }\n                    }\n                    setMembers(membersnames);\n                    setLoading(false);\n                }\n            }\n        }\n    });\n    useEffect(() => {\n        fetchGroup();\n    }, []);\n    const gettododata = () => __awaiter(void 0, void 0, void 0, function* () {\n        const todosref = collection(db, \"users\", selectedMember, \"todos\");\n        const unsubscribe = onSnapshot(todosref, (querySnapshot) => {\n            const todosbyday = {};\n            querySnapshot.forEach((doc) => {\n                const date = doc.id;\n                const mood = doc.data().date;\n                todosbyday[date] = mood;\n            });\n            setTodosData(todosbyday);\n        });\n        return unsubscribe;\n    });\n    // getting journal\n    useEffect(() => {\n        getjournaldata();\n        gettododata();\n    }, [selectedMember]);\n    const getjournaldata = () => __awaiter(void 0, void 0, void 0, function* () {\n        const journalsbydayjournalref = collection(db, \"users\", selectedMember, \"journals\");\n        const unsubscribe = onSnapshot(journalsbydayjournalref, (querySnapshot) => {\n            const journalsbyday = {};\n            querySnapshot.forEach((doc) => {\n                const date = doc.id;\n                const bytes = CryptoJS.AES.decrypt(doc.data().content, \"helloisthisagoodkey\");\n                const decryptedPlaintext = bytes.toString(CryptoJS.enc.Utf8);\n                const journal = {\n                    title: doc.data().title,\n                    content: decryptedPlaintext,\n                };\n                journalsbyday[date] = journal;\n            });\n            setJournalByDay(journalsbyday);\n            const input = journalsbyday[format(currentDay, \"yyyy-MM-dd\")]\n                ? journalsbyday[format(currentDay, \"yyyy-MM-dd\")].content\n                : \"\";\n            setJournalInput(input);\n        });\n        return unsubscribe;\n    });\n    //setting todos\n    const writetodostodatabase = () => __awaiter(void 0, void 0, void 0, function* () {\n        try {\n            const batch = writeBatch(db);\n            Object.keys(todosData).forEach((date) => {\n                const todosref = doc(db, \"users\", user.email, \"todos\", date);\n                batch.set(todosref, { date: todosData[date] });\n            });\n            yield batch.commit();\n        }\n        catch (e) {\n            console.error(\"Error adding documents: \", e);\n        }\n    });\n    useEffect(() => {\n        selectedMember == user.email && writetodostodatabase();\n    }, [todosData]);\n    // useEffect(() => {\n    //   if (selectedMember == user.email) {\n    //     const journaldayref = collection(db, \"users\", user.email, \"journals\");\n    //     const unsubscribe = onSnapshot(journaldayref, (querySnapshot) => {\n    //       const journalsbyday = {};\n    //       querySnapshot.forEach((doc) => {\n    //         const date = doc.id;\n    //         const journal = doc.data();\n    //         journalsbyday[date] = journal;\n    //       });\n    //       console.log(journalsbyday);\n    //       setJournalByDay(journalsbyday);\n    //     });\n    //     return unsubscribe;\n    //   }\n    // }, [user, db]);\n    const handlePrevDay = () => {\n        setCurrentDay((prevDay) => {\n            const newDay = new Date(prevDay);\n            newDay.setDate(newDay.getDate() - 1);\n            return newDay;\n        });\n        setJournalInput(journalByDay[format(currentDay, \"yyyy-MM-dd\")]\n            ? journalByDay[format(currentDay, \"yyyy-MM-dd\")].content\n            : \"\");\n    };\n    const handleNextDay = () => {\n        setCurrentDay((prevDay) => {\n            const newDay = new Date(prevDay);\n            newDay.setDate(newDay.getDate() + 1);\n            return newDay;\n        });\n        setJournalInput(journalByDay[format(currentDay, \"yyyy-MM-dd\")]\n            ? journalByDay[format(currentDay, \"yyyy-MM-dd\")].content\n            : \"\");\n    };\n    return (React.createElement(\"div\", { className: \"justify-center font-serif pb-4 w-80 h-[475px]\" },\n        React.createElement(\"div\", { className: \"flex justify-between items-center\" },\n            React.createElement(\"h2\", { className: \"text-2xl font-medium font-serif \" }, showJournal ? \"Brain Dump\" : \"To-dos\"),\n            React.createElement(\"div\", null,\n                React.createElement(\"button\", { className: \"bg-teel rounded-full px-3 py-1 mr-2 text-white hover:bg-opacity-80 transition-colors\", onClick: handlePrevDay }, \"<\"),\n                React.createElement(\"button\", { className: \"bg-teel rounded-full px-3 py-1 text-white hover:bg-opacity-80 transition-colors\", onClick: handleNextDay }, \">\"))),\n        React.createElement(\"div\", { className: \" flex mt-1 justify-between\" },\n            React.createElement(\"h2\", { className: \"text-md font-bold text-gray-800 mb-2\" }, format(currentDay, \"EEEE, MMMM d, yyyy\")),\n            React.createElement(\"div\", { className: \"border border-cpink h-8 rounded-lg flex max-w-[150px]\" },\n                React.createElement(\"button\", { className: `${!showJournal ? \"bg-cpink text-white\" : \"bg-white text-cpink\"} rounded-l-md flex w-full items-center px-2 justify-center transition-colors duration-300`, onClick: () => setShowJournal(false) },\n                    React.createElement(\"span\", null, \"Todos\")),\n                React.createElement(\"button\", { className: `${showJournal ? \"bg-cpink text-white\" : \"bg-white text-cpink\"} rounded-r-md flex items-center w-full  px-2 justify-center transition-colors duration-300`, onClick: () => setShowJournal(true) },\n                    React.createElement(\"span\", null, \"Journal\")))),\n        showJournal ? (usePassword ? (React.createElement(\"div\", { className: \"my-4 w-80 \" },\n            React.createElement(JournalRouter, { currentDay: currentDay, setJournalByDay: setJournalByDay, journalByDay: journalByDay, user: user, db: db, selectedMember: selectedMember, setSelectedMember: setSelectedMember, code: code, setCode: setCode, members: members, setMembers: setMembers, groupExists: groupExists, setGroupExists: setGroupExists, loading: loading, setLoading: setLoading, journalInput: journalInput, setJournalInput: setJournalInput, getjournaldata: getjournaldata, access: access, setAccess: setAccess, password: password, setPassword: setPassword, usePassword: usePassword, setUsePassword: setUsePassword }))) : (React.createElement(Journal, { currentDay: currentDay, setJournalByDay: setJournalByDay, journalByDay: journalByDay, user: user, db: db, selectedMember: selectedMember, setSelectedMember: setSelectedMember, code: code, setCode: setCode, members: members, setMembers: setMembers, groupExists: groupExists, setGroupExists: setGroupExists, loading: loading, setLoading: setLoading, journalInput: journalInput, setJournalInput: setJournalInput, getjournaldata: getjournaldata, access: access, setAccess: setAccess, usePassword: usePassword }))) : (React.createElement(\"div\", { className: \"my-4 w-80 \" },\n            React.createElement(TodoComp, { currentDay: currentDay, setTodosData: setTodosData, todosData: todosData, user: user, db: db, selectedMember: selectedMember, setSelectedMember: setSelectedMember, code: code, setCode: setCode, members: members, setMembers: setMembers, groupExists: groupExists, setGroupExists: setGroupExists, loading: loading, setLoading: setLoading })))));\n};\nexport default Intentions;\n","import React from \"react\";\nimport Journal from \"../features/Journal\";\nimport UnlockJournal from \"../features/UnlockJournal\";\nconst JournalRouter = ({ currentDay, setJournalByDay, journalByDay, user, db, selectedMember, setSelectedMember, code, setCode, members, setMembers, groupExists, setGroupExists, loading, journalInput, setJournalInput, setLoading, getjournaldata, access, setAccess, password, setPassword, setUsePassword, usePassword, }) => {\n    return (React.createElement(\"div\", null, access ? (React.createElement(Journal, { currentDay: currentDay, setJournalByDay: setJournalByDay, journalByDay: journalByDay, user: user, db: db, selectedMember: selectedMember, setSelectedMember: setSelectedMember, code: code, setCode: setCode, members: members, setMembers: setMembers, groupExists: groupExists, setGroupExists: setGroupExists, loading: loading, setLoading: setLoading, journalInput: journalInput, setJournalInput: setJournalInput, getjournaldata: getjournaldata, access: access, setAccess: setAccess, usePassword: usePassword })) : (React.createElement(UnlockJournal, { user: user, db: db, access: access, setAccess: setAccess, password: password, setPassword: setPassword, setUsePassword: setUsePassword }))));\n};\nexport default JournalRouter;\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport React from \"react\";\nimport { doc, setDoc } from \"firebase/firestore\";\nconst Signup = ({ user, db, setFirstTime }) => {\n    const [name, setName] = React.useState(\"\");\n    const [age, setAge] = React.useState(\"\");\n    const [reason, setReason] = React.useState(\"productivity\");\n    const [otherReason, setOtherReason] = React.useState(\"\");\n    const [submitting, setSubmitting] = React.useState(false);\n    const handleSubmit = (e) => __awaiter(void 0, void 0, void 0, function* () {\n        e.preventDefault();\n        setSubmitting(true);\n        let thereason = reason == \"other\" ? otherReason : reason;\n        try {\n            const userData = {\n                name,\n                age,\n                photo: user.photoURL,\n                reason: thereason,\n            };\n            yield setDoc(doc(db, \"users\", user.email), userData);\n        }\n        catch (error) {\n            console.error(\"Error writing user data to Firestore:\", error);\n        }\n        finally {\n            setSubmitting(false);\n            setFirstTime(false);\n        }\n    });\n    return (React.createElement(\"div\", { className: \"flex flex-col justify-center items-center\" },\n        React.createElement(\"div\", { className: \" flex mt-8 gap-2\" },\n            React.createElement(\"img\", { src: \"logo128x128.png\", alt: \"MoodSpace logo\", className: \"w-10 mb-2\" }),\n            React.createElement(\"h1\", { className: \"text-xl font-serif font-bold\" }, \"Welcome to MoodSpace\")),\n        React.createElement(\"form\", { className: \"flex flex-wrap gap-4 pb-4 px-4\", onSubmit: handleSubmit },\n            React.createElement(\"div\", { className: \"w-64 mb-4\" },\n                React.createElement(\"label\", { className: \"block w-full text-gray-700 font-bold mb-2\", htmlFor: \"email\" }, \"Email\"),\n                React.createElement(\"input\", { className: \" w-64 border rounded-md py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\", id: \"email\", type: \"email\", value: user.email, disabled: true })),\n            React.createElement(\"div\", { className: \"mb-4\" },\n                React.createElement(\"label\", { className: \"block text-gray-700 font-bold mb-2\", htmlFor: \"name\" }, \"First Name\"),\n                React.createElement(\"input\", { className: \"border rounded-md  w-52 py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\", id: \"name\", type: \"text\", value: name, onChange: (e) => setName(e.target.value) })),\n            React.createElement(\"div\", { className: \"mb-4\" },\n                React.createElement(\"label\", { className: \"block text-gray-700 font-bold mb-2\", htmlFor: \"age\" }, \"Age\"),\n                React.createElement(\"input\", { className: \"border rounded-md py-2 px-3 max-w-[100px] text-gray-700 leading-tight focus:outline-none focus:shadow-outline\", id: \"age\", type: \"number\", value: age, onChange: (e) => setAge(e.target.value) })),\n            React.createElement(\"div\", { className: \"flex w-full  mb-4\" },\n                React.createElement(\"div\", null,\n                    React.createElement(\"label\", { className: \"block text-gray-700 font-bold mb-2\", htmlFor: \"reason\" }, \"Reason for using MoodSpace\"),\n                    React.createElement(\"select\", { className: \"border min-w-[150px] rounded-md py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\", id: \"reason\", value: reason, onChange: (e) => {\n                            setReason(e.target.value);\n                        } },\n                        React.createElement(\"option\", { value: \"productivity\" }, \"Productivity\"),\n                        React.createElement(\"option\", { value: \"wellness\" }, \"Wellness\"),\n                        React.createElement(\"option\", { value: \"both\" }, \"Both!\"),\n                        React.createElement(\"option\", { value: \"other\" }, \"Other\"))),\n                reason === \"other\" && (React.createElement(\"div\", { className: \"mt-6 \" },\n                    React.createElement(\"input\", { className: \"border justify-start rounded-md py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\", id: \"otherReason\", type: \"text\", placeholder: \"please share why\", value: otherReason, onChange: (e) => setOtherReason(e.target.value) })))),\n            React.createElement(\"div\", { className: \"flex w-full justify-center\" },\n                React.createElement(\"button\", { type: \"submit\", className: \"bg-teal-500 w-full hover:bg-teal-600 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\" }, \"Submit\")))));\n};\nexport default Signup;\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport React, { useState, useEffect } from \"react\";\nimport { arrayUnion, collection, deleteDoc, doc, getDoc, serverTimestamp, setDoc, updateDoc, } from \"firebase/firestore\";\nimport { BsArrowLeft } from \"react-icons/bs\";\nconst AccountabilityPopup = ({ db, user, setShowPopup }) => {\n    const [code, setCode] = useState(\"\");\n    const [groupName, setGroupName] = useState(\"\");\n    const [members, setMembers] = useState([]);\n    const [error, setError] = useState(\"\");\n    const [groupExists, setGroupExists] = useState(false);\n    const [loading, setLoading] = useState(true);\n    const [canEditTodos, setCanEditTodos] = useState(false);\n    const [canEditJournals, setCanEditJournals] = useState(false);\n    const [showTodos, setShowTodos] = useState(false);\n    const [showJournals, setShowJournals] = useState(false);\n    const fetchGroup = () => __awaiter(void 0, void 0, void 0, function* () {\n        const userDocRef = doc(db, \"users\", user.email);\n        const userDoc = yield getDoc(userDocRef);\n        let membersnames = [];\n        if (userDoc.exists()) {\n            const groupCode = userDoc.data().group;\n            setShowTodos(userDoc.data().shareTodos);\n            setShowJournals(userDoc.data().shareJournals);\n            if (groupCode) {\n                setCode(groupCode);\n                setGroupExists(true);\n                const groupDocRef = doc(db, \"groups\", groupCode);\n                const groupDoc = yield getDoc(groupDocRef);\n                if (groupDoc.exists()) {\n                    const members = groupDoc\n                        .data()\n                        .members.filter((member) => member !== user.email);\n                    for (const mem of members) {\n                        const userDocRef = doc(db, \"users\", mem);\n                        const userDoc = yield getDoc(userDocRef);\n                        if (userDoc.exists()) {\n                            const membername = userDoc.data().name;\n                            const memberphoto = userDoc.data().photo;\n                            membersnames.push({\n                                name: membername,\n                                email: mem,\n                                photo: memberphoto,\n                            });\n                        }\n                        else {\n                            console.log(\"error finding member\");\n                        }\n                    }\n                    setMembers(membersnames);\n                    setLoading(false);\n                }\n            }\n        }\n    });\n    const handleLeaveGroup = () => __awaiter(void 0, void 0, void 0, function* () {\n        try {\n            // Remove user from the group's members list\n            const groupDocRef = doc(db, \"groups\", code);\n            const groupDoc = yield getDoc(groupDocRef);\n            if (groupDoc.exists() && members.length > 0) {\n                const members = groupDoc\n                    .data()\n                    .members.filter((member) => member !== user.email);\n                yield updateDoc(groupDocRef, { members });\n                // Remove group from the user's document\n                const userDocRef = doc(db, \"users\", user.email);\n                yield updateDoc(userDocRef, { group: null });\n            }\n            else {\n                // Delete the group doc if it's empty\n                yield deleteDoc(groupDocRef);\n            }\n            // Clear state\n            setMembers([]);\n            setGroupExists(false);\n            setCode(\"\");\n        }\n        catch (error) {\n            console.log(\"Error leaving group:\", error);\n        }\n    });\n    useEffect(() => {\n        fetchGroup();\n    }, [db, user]);\n    const handleCodeChange = (e) => {\n        setCode(e.target.value);\n    };\n    const handleGroupNameChange = (e) => {\n        setGroupName(e.target.value);\n    };\n    const handleCreateGroup = () => __awaiter(void 0, void 0, void 0, function* () {\n        const groupsRef = collection(db, \"groups\");\n        const code = generateCode();\n        yield setDoc(doc(groupsRef, code), {\n            groupName,\n            createdAt: serverTimestamp(),\n            members: [user.email],\n        });\n        // Update user profile\n        const userDocRef = doc(db, \"users\", user.email);\n        yield updateDoc(userDocRef, {\n            group: code,\n        });\n        setCode(code);\n        setGroupExists(true);\n    });\n    const handleJoinGroup = () => __awaiter(void 0, void 0, void 0, function* () {\n        const groupsRef = collection(db, \"groups\");\n        const groupDoc = yield getDoc(doc(groupsRef, code));\n        if (groupDoc.exists()) {\n            yield updateDoc(doc(groupsRef, code), {\n                members: arrayUnion(user.email),\n            });\n            setGroupExists(true);\n            // Update user profile\n            const userDocRef = doc(db, \"users\", user.email);\n            yield updateDoc(userDocRef, {\n                group: code,\n            });\n            fetchGroup();\n        }\n        else {\n            setError(\"Invalid code, please try again.\");\n        }\n    });\n    const updateShowTodos = (checked) => __awaiter(void 0, void 0, void 0, function* () {\n        const userDocRef = doc(db, \"users\", user.email);\n        yield updateDoc(userDocRef, {\n            shareTodos: checked,\n        });\n        fetchGroup();\n    });\n    const updateShowJournals = (checked) => __awaiter(void 0, void 0, void 0, function* () {\n        const userDocRef = doc(db, \"users\", user.email);\n        yield updateDoc(userDocRef, {\n            shareJournals: checked,\n        });\n        fetchGroup();\n    });\n    const generateCode = () => {\n        let code = \"\";\n        const characters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n        const codeLength = 6;\n        for (let i = 0; i < codeLength; i++) {\n            code += characters.charAt(Math.floor(Math.random() * characters.length));\n        }\n        return code;\n    };\n    return (React.createElement(\"div\", { className: \"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center\", style: { zIndex: 9999 }, onClick: (event) => {\n            if (event.target === event.currentTarget) {\n                setShowPopup(false);\n            }\n        } },\n        React.createElement(\"div\", { className: \"bg-white w-[350px] h-auto rounded-lg pt-4 px-4 flex  \" },\n            React.createElement(\"div\", { className: \"flex w-80 mt-2 h-full items-center pb-8 flex-col gap-4 \" },\n                React.createElement(\"h2\", { className: \"text-2xl flex flex-col font-medium font-serif flex-start justify-start w-full text-left\" },\n                    \"Accountabilibuddies!\",\n                    React.createElement(\"span\", { className: \"text-sm font-bold\" }, \"Join one to hold your friends accountable\")),\n                !groupExists ? (React.createElement(\"div\", { className: \"flex flex-col\" },\n                    React.createElement(\"div\", null,\n                        React.createElement(\"h1\", { className: \"text-md mb-6\" }, \"Enter a name to create, or enter a code to join a group\"),\n                        React.createElement(\"div\", { className: \"flex flex-col space-y-4\" },\n                            React.createElement(\"div\", { className: \"flex items-center space-x-4\" },\n                                React.createElement(\"input\", { type: \"text\", value: groupName, onChange: handleGroupNameChange, placeholder: \"Group Name\", className: \"flex-grow px-4 py-2 w-full text-gray-700 border border-gray-400 rounded-lg focus:outline-none focus:border-cpink\" }),\n                                React.createElement(\"button\", { onClick: handleCreateGroup, disabled: !groupName, className: `${groupName ? \"bg-red-400\" : \"bg-cpink\"} hover:bg-cpink px-4 rounded-lg py-2 w-52 font-medium text-white ` }, \"Create Group\")),\n                            React.createElement(\"div\", { className: \"flex items-center space-x-4\" },\n                                React.createElement(\"input\", { type: \"text\", value: code, onChange: handleCodeChange, placeholder: \"Enter Code\", className: \"flex-grow px-4 py-2 w-full text-gray-700 border border-gray-400 rounded-lg focus:outline-none focus:border-cpink\" }),\n                                React.createElement(\"button\", { onClick: handleJoinGroup, disabled: !code, className: `${code ? \"bg-red-400\" : \"bg-cpink\"} hover:bg-cpink px-4 rounded-lg py-2 w-52  font-medium text-white ` }, \"Join Group\")))))) : (React.createElement(\"div\", { className: \" px-4\" },\n                    React.createElement(\"div\", { className: \"flex items-center gap-2\" },\n                        React.createElement(\"p\", { className: \"text-md font-medium mb-2\" }, \"Group Code:\"),\n                        React.createElement(\"input\", { type: \"text\", value: code, readOnly: true, className: \"bg-gray-100  px-3 py-2 rounded-md mb-2\" })),\n                    React.createElement(\"p\", { className: \"text-xs text-gray-500 mb-4\" }, \"^Share this code with others to join the group.\"),\n                    React.createElement(\"div\", { className: \"flex py-2 gap-2\" },\n                        React.createElement(\"label\", { htmlFor: \"todo\" }, \"Share my to-dos\"),\n                        React.createElement(\"input\", { onChange: (e) => {\n                                const checked = e.target.checked;\n                                updateShowTodos(checked);\n                            }, type: \"checkbox\", name: \"todo\", value: \"todo\", checked: showTodos }),\n                        React.createElement(\"label\", { htmlFor: \"journal\" }, \"Share my journals\"),\n                        React.createElement(\"input\", { onChange: (e) => {\n                                const checked = e.target.checked;\n                                updateShowJournals(checked);\n                            }, type: \"checkbox\", name: \"journal\", value: \"journal\", checked: showJournals })),\n                    !members.length ? (React.createElement(\"p\", { className: \"text-md text-teal-500 font-medium mb-4\" }, \"Waiting for members to join...\")) : (React.createElement(\"div\", null,\n                        React.createElement(\"p\", { className: \"text-md flex gap-4 font-medium mb-2\" }, \"Members:\"),\n                        React.createElement(\"div\", { className: \"flex w-[320px] justify-center flex-row overflow-scroll gap-4\" },\n                            React.createElement(\"div\", { className: \"flex flex-col items-center justify-center\", key: \"me\" },\n                                React.createElement(\"img\", { className: \"w-12 h-12 rounded-full \", src: user.photoURL }),\n                                React.createElement(\"p\", { className: \"text-sm text-center text-gray-500 mb-1\" }, \"meee!!\")),\n                            members.map((member) => (React.createElement(\"div\", { className: \"flex flex-col items-center justify-center\", key: member.email },\n                                React.createElement(\"img\", { className: \"w-12 h-12 rounded-full \", src: member.photo }),\n                                React.createElement(\"p\", { key: member.email, className: \"text-sm text-center text-gray-500 mb-1\" }, member.name))))))),\n                    error && React.createElement(\"p\", { className: \"text-red-500\" }, error))),\n                groupExists && (React.createElement(\"button\", { onClick: handleLeaveGroup, className: \"place-self-start flex items-center gap-2  bg-red-500 text-white rounded p-2\" },\n                    React.createElement(\"span\", null,\n                        React.createElement(BsArrowLeft, null)),\n                    \"Leave Group\"))))));\n};\nexport default AccountabilityPopup;\n","import React, { useState } from \"react\";\nimport MoodPicker from \"./MoodPicker\";\nimport FeelingsReasons from \"./FeelingsReasons\";\nconst CalendarComp = ({ year, month, moodByDay, setMoodByDay, db, user }) => {\n    const weekdays = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\n    const firstDayOfMonth = new Date(year, month, 1).getDay();\n    const daysInMonth = new Date(year, month + 1, 0).getDate();\n    const days = Array.from({ length: daysInMonth }, (_, i) => i + 1);\n    const [selectedDay, setSelectedDay] = useState(null);\n    const [mood, setMood] = useState(true);\n    const today = new Date();\n    const emotions = [\n        { emoji: \"🤩\", text: \"ahhh\", color: \"violet-300\" },\n        { emoji: \"😊\", text: \"nicee\", color: \"blue-300\" },\n        { emoji: \"😐\", text: \"okey\", color: \"teal-300\" },\n        { emoji: \"😔\", text: \"bummy\", color: \"orange-300\" },\n        { emoji: \"😣\", text: \"rotten\", color: \"red-300\" },\n    ];\n    const handleDayClick = (day) => {\n        setSelectedDay(day);\n    };\n    const isCurrentDay = (day) => {\n        return (year === today.getFullYear() &&\n            month === today.getMonth() &&\n            day === today.getDate());\n    };\n    const getEmojiForDay = (day) => {\n        if (moodByDay.hasOwnProperty(`${year}-${month + 1}-${day}`)) {\n            const emoji = moodByDay[`${year}-${month + 1}-${day}`];\n            const emotion = emotions.find((e) => e.emoji === emoji);\n            return (React.createElement(\"div\", null,\n                \" \",\n                React.createElement(\"div\", { className: `w-6 h-6 rounded-full bg-${emotion.color} flex items-center justify-center text-xl`, style: { cursor: \"pointer\" } }, moodByDay[`${year}-${month + 1}-${day}`]),\n                React.createElement(\"span\", { className: \"text-xs\" }, day)));\n        }\n        return null;\n    };\n    return (React.createElement(\"div\", { className: \"grid w-80 grid-cols-7 gap-2 text-center\" },\n        weekdays.map((day) => (React.createElement(\"div\", { key: day, className: \"text-gray-700 font-medium\" }, day))),\n        Array.from({ length: firstDayOfMonth }, (_, i) => (React.createElement(\"div\", { key: `pre_${i}`, className: \"text-gray-300\" }, \"\"))),\n        days.map((day) => (React.createElement(\"div\", { key: day, className: `flex flex-col items-center justify-center ${selectedDay === day ? \"bg-gray-200\" : \"\"}`, onClick: () => handleDayClick(day), style: { cursor: \"pointer\" } }, getEmojiForDay(day) || (React.createElement(\"div\", null,\n            React.createElement(\"div\", { className: `w-6 h-6 rounded-full ${isCurrentDay(day) ? \"bg-teel\" : \"bg-gray-300\"} `, onClick: () => setSelectedDay(day), style: { cursor: \"pointer\" } }),\n            React.createElement(\"span\", { className: \"text-xs\" }, day)))))),\n        selectedDay !== null && (React.createElement(\"div\", { key: `popup_${selectedDay}`, className: \"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center\", style: { zIndex: 9999 }, onClick: (event) => {\n                if (event.target === event.currentTarget) {\n                    setSelectedDay(null);\n                }\n            } },\n            React.createElement(\"div\", { className: \"bg-white rounded-lg w-80 p-4 flex flex-col\" }, mood ? (isCurrentDay(selectedDay) ? (React.createElement(MoodPicker, { year: year, month: month, moodByDay: moodByDay, setMoodByDay: setMoodByDay, selectedDay: selectedDay, setMood: setMood })) : (React.createElement(\"div\", null,\n                \" \",\n                React.createElement(\"h1\", { className: \"font-bold\" }, \"Oopsie! Looks like you're a time traveler. \\uD83E\\uDE84\"),\n                React.createElement(\"h1\", { className: \"underline\" }, `You can't track your mood for a day ${year < today.getFullYear() ||\n                    month < today.getMonth() ||\n                    selectedDay < today.getDate()\n                    ? \"from the past!\"\n                    : \"that hasn't happened yet!\"}\n                      `),\n                React.createElement(\"h1\", { className: \"mt-2\" }, \"Come back tomorrow and don't miss a day, I want to hear all about how you're feeling! \\uD83D\\uDE80\\uD83D\\uDD70\\uFE0F\\uD83D\\uDC4B\")))) : (React.createElement(FeelingsReasons, { selectedDay: selectedDay, setMood: setMood, year: year, month: month, setSelectedDay: setSelectedDay, user: user, db: db }))),\n            React.createElement(\"span\", { className: \"bg-red-300\" }),\n            React.createElement(\"span\", { className: \"bg-orange-300\" }, \" \"),\n            React.createElement(\"span\", { className: \"bg-green-300\" }, \" \"),\n            React.createElement(\"span\", { className: \"bg-teal-300\" }, \" \"),\n            React.createElement(\"span\", { className: \"bg-blue-300\" }, \" \"),\n            React.createElement(\"span\", { className: \"bg-violet-300\" }, \" \")))));\n};\nexport default CalendarComp;\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport React, { useState } from \"react\";\nimport { collection, getDocs, doc, getDoc, } from \"firebase/firestore\";\nimport { BsDownload } from \"react-icons/bs\";\nconst ExportData = ({ db, user, setShowPopup }) => {\n    const [exportData, setExportData] = useState(\"\");\n    const exportUserData = () => __awaiter(void 0, void 0, void 0, function* () {\n        const todosCollection = collection(db, \"users\", user.email, \"todos\");\n        const moodByDayDoc = collection(db, \"users\", user.email, \"moodByDay\");\n        const journalsCollection = collection(db, \"users\", user.email, \"journals\");\n        const moodReasonsDocRef = doc(db, \"users\", user.email);\n        const [todos, moodByDay, journals, moodReasons] = yield Promise.all([\n            getDocs(todosCollection),\n            getDocs(moodByDayDoc),\n            getDocs(journalsCollection),\n            getDoc(moodReasonsDocRef),\n        ]);\n        const data = {\n            todos: todos.docs.map((doc) => doc.data()),\n            moodByDay: moodByDay.docs.reduce((acc, doc) => {\n                const date = doc.id;\n                acc[date] = doc.data();\n                return acc;\n            }, {}),\n            journals: journals.docs.reduce((acc, doc) => {\n                const date = doc.id;\n                acc[date] = doc.data();\n                return acc;\n            }, {}),\n            moodReasons: moodReasons.data().moodReasons,\n        };\n        // Convert JSON data to CSV format\n        let csvData = \"\";\n        // Add todos to CSV\n        if (Object.keys(data.todos).length > 0) {\n            csvData += \"Todos\\n\";\n            csvData += \"Date,Text\\n\";\n            Object.keys(data.todos).forEach((date) => {\n                const todo = data.todos[date];\n                todo.date.forEach((todoDate) => {\n                    csvData += `${todoDate.date},${todoDate.text}\\n`;\n                });\n            });\n            csvData += \"\\n\";\n        }\n        // Add moodByDay to CSV\n        if (Object.keys(data.moodByDay).length > 0) {\n            csvData += \"Mood By Day\\n\";\n            csvData += \"Date, Emoji\\n\";\n            Object.keys(data.moodByDay).forEach((date) => {\n                const mood = data.moodByDay[date];\n                csvData += `${date},${mood.emoji}\\n`;\n            });\n            csvData += \"\\n\";\n        }\n        // Add journals to CSV\n        if (Object.keys(data.journals).length > 0) {\n            csvData += \"Journals\\n\";\n            csvData += \"Date,Content\\n\";\n            Object.keys(data.journals).forEach((date) => {\n                const journal = data.journals[date];\n                csvData += `${date},${journal.content}\\n`;\n            });\n            csvData += \"\\n\";\n        }\n        // Add moodReasons to CSV\n        if (data.moodReasons) {\n            csvData += \"Mood Reasons\\n\";\n            csvData += \"Date,Reasons\\n\";\n            Object.keys(data.moodReasons).forEach((date) => {\n                csvData += `${date},\"${data.moodReasons[date].join(\", \")}\"\\n`;\n            });\n            csvData += \"\\n\";\n        }\n        const dataUri = \"data:text/csv;charset=utf-8,\" + encodeURIComponent(csvData);\n        setExportData(dataUri);\n    });\n    return (React.createElement(\"div\", { className: \"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center\", style: { zIndex: 9999 }, onClick: (event) => {\n            if (event.target === event.currentTarget) {\n                setShowPopup(false);\n            }\n        } },\n        React.createElement(\"div\", { className: \"bg-white w-auto h-auto rounded-lg pt-4 px-4 flex\" },\n            React.createElement(\"div\", { className: \"flex w-60 mt-2 h-full items-center pb-8 flex-col gap-4\" },\n                React.createElement(\"div\", { className: \"flex justify-center items-center gap-4\" },\n                    React.createElement(\"button\", { className: \"flex items-center justify-center gap-4 \", onClick: exportUserData },\n                        React.createElement(BsDownload, null),\n                        \"Prepare Data for Export\")),\n                exportData && (React.createElement(\"a\", { className: \"bg-teel rounded-md text-white p-2 \", href: exportData, download: \"myData.csv\" }, \"Download\"))))));\n};\nexport default ExportData;\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { doc, getDoc, setDoc } from \"firebase/firestore\";\nimport React, { useEffect, useState } from \"react\";\nimport { FaArrowLeft } from \"react-icons/fa\";\nconst FeelingsReasons = ({ selectedDay, setMood, year, month, setSelectedDay, user, db, }) => {\n    const [reasonsData, setReasonsData] = useState([]);\n    const [selectedReasons, setSelectedReasons] = useState([]);\n    const gettingData = () => __awaiter(void 0, void 0, void 0, function* () {\n        const docRef = doc(db, \"users\", user.email);\n        const docSnap = yield getDoc(docRef);\n        if (docSnap.exists()) {\n            const data = docSnap.data().moodReasons;\n            console.log(\"Document data:\", data);\n            if (data) {\n                setReasonsData(data);\n                console.log(data[`${year}-${month + 1}-${selectedDay}`]);\n                console.log(year, month, selectedDay);\n                setSelectedReasons(data[`${year}-${month + 1}-${selectedDay}`]\n                    ? data[`${year}-${month + 1}-${selectedDay}`]\n                    : []);\n            }\n        }\n        else {\n            // docSnap.data() will be undefined in this case\n            console.log(\"No such document!\");\n        }\n    });\n    // Load reasons from local storage on mount\n    useEffect(() => {\n        gettingData();\n    }, []);\n    //   useEffect(() => {\n    //     setMood(true);\n    //   }, [selectedDay]);\n    const reasons = [\n        \"Food\",\n        \"Sleep\",\n        \"Exercise\",\n        \"Family\",\n        \"Partner\",\n        \"Social Media\",\n        \"Friends\",\n        \"Events\",\n        \"School\",\n        \"Work\",\n        \"Money\",\n        \"Pets\",\n        \"Hobbies\",\n        \"Music\",\n    ];\n    const handleReasonClick = (reason) => {\n        if (selectedReasons.includes(reason)) {\n            setSelectedReasons(selectedReasons.filter((r) => r !== reason));\n        }\n        else {\n            setSelectedReasons([...selectedReasons, reason]);\n        }\n    };\n    return (React.createElement(\"div\", { className: \"bg-white rounded-lg p-4 font-serif\" },\n        React.createElement(\"h3\", { className: \"text-[16px] mb-4 font-bold\" }, \"What made you feel this way\"),\n        React.createElement(\"div\", { className: \"flex flex-wrap justify-center\" }, reasons.map((reason) => (React.createElement(\"button\", { key: reason, className: `w-auto justify-center h-6 m-1 py-1 px-2 text-xs rounded-full ${selectedReasons.includes(reason)\n                ? \"bg-teel text-white\"\n                : \"bg-gray-200 text-gray-800\"}`, onClick: () => handleReasonClick(reason) }, reason)))),\n        React.createElement(\"div\", { className: \"flex place-items-center justify-between mt-4\" },\n            React.createElement(FaArrowLeft, { className: \"text-teel hover:text-teal-600 text-lg \", onClick: () => {\n                    setMood(true);\n                } }),\n            React.createElement(\"button\", { className: \"bg-teel hover:bg-teal-600 text-white py-2 px-4 rounded-lg\", onClick: () => {\n                    const newReasons = Object.assign({}, reasonsData);\n                    newReasons[`${year}-${month + 1}-${selectedDay}`] = selectedReasons;\n                    // localStorage.setItem(\"moodReasons\", JSON.stringify(newReasons));\n                    const userRef = doc(db, \"users\", user.email);\n                    setDoc(userRef, { moodReasons: newReasons }, { merge: true });\n                    setSelectedDay(null);\n                    setMood(true);\n                } }, \"Save\"))));\n};\nexport default FeelingsReasons;\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { format } from \"date-fns\";\nimport { doc, writeBatch } from \"firebase/firestore\";\nimport CryptoJS from \"crypto-js\";\nimport { FaLockOpen } from \"react-icons/fa\";\nconst Journal = ({ currentDay, setAccess, setJournalByDay, journalByDay, user, db, selectedMember, setSelectedMember, code, setCode, members, setMembers, groupExists, setGroupExists, loading, journalInput, setJournalInput, setLoading, getjournaldata, usePassword, access, }) => {\n    var _a;\n    const selectRef = useRef(null);\n    const [loadingnow, setloadingnow] = useState(false);\n    useEffect(() => {\n        setJournalInput(journalByDay[format(currentDay, \"yyyy-MM-dd\")]\n            ? journalByDay[format(currentDay, \"yyyy-MM-dd\")].content\n            : \"\");\n    }, [currentDay]);\n    const handleJournalInputChange = (e) => {\n        setJournalInput(e.target.value);\n    };\n    useEffect(() => {\n        setSelectedMember(user.email);\n    }, []);\n    const handleSaveEntry = () => __awaiter(void 0, void 0, void 0, function* () {\n        setloadingnow(true);\n        const encryptedJournalByDay = {};\n        // Loop through each journal entry and encrypt the content\n        for (const [date, entry] of Object.entries(journalByDay)) {\n            const encryptedContent = CryptoJS.AES.encrypt(entry.content, \"helloisthisagoodkey\").toString();\n            encryptedJournalByDay[date] = Object.assign(Object.assign({}, entry), { content: encryptedContent });\n        }\n        // Add or overwrite the new journal entry\n        const newJournal = Object.assign(Object.assign({}, encryptedJournalByDay), { [format(currentDay, \"yyyy-MM-dd\")]: {\n                title: format(currentDay, \"EEEE, MMMM d, yyyy\"),\n                content: CryptoJS.AES.encrypt(journalInput, \"helloisthisagoodkey\").toString(),\n            } });\n        const batch = writeBatch(db);\n        Object.keys(newJournal).forEach((date) => {\n            const journalRef = doc(db, \"users\", user.email, \"journals\", date);\n            batch.set(journalRef, Object.assign({}, newJournal[date]));\n        });\n        yield batch.commit();\n        getjournaldata();\n        setloadingnow(false);\n    });\n    return (React.createElement(\"div\", { className: \"pb-14 pt-[.3px]\" },\n        code && groupExists && (React.createElement(\"div\", null,\n            React.createElement(\"div\", { className: \"flex items-center  my-2\" },\n                React.createElement(\"label\", { htmlFor: \"group-member-select\", className: \"w-32 mr-2\" }, \"Intentions for:\"),\n                React.createElement(\"select\", { id: \"group-member-select\", ref: selectRef, onChange: (e) => {\n                        setSelectedMember(e.target.value);\n                        console.log(\"changeddd member\");\n                    }, className: \"p-2 w-full rounded border border-gray-200 outline-none\" },\n                    React.createElement(\"option\", { value: user.email }, \"meee!\"),\n                    members.map((member) => {\n                        if (member.showJournals) {\n                            return (React.createElement(\"option\", { key: member.email, value: member.email }, member.name));\n                        }\n                    }))),\n            React.createElement(\"hr\", { className: \"py-2\" }))),\n        React.createElement(\"div\", null,\n            React.createElement(\"textarea\", { disabled: selectedMember != user.email, className: \"py-4 shadow appearance-none border border-gray-200 min-h-[250px] text-left rounded px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline w-full\", id: \"journal-input\", placeholder: selectedMember == user.email\n                    ? `Write your journal here...\\n\\nThis can be a daily reflection, summary of your day, or any thoughts you just want to note down :)`\n                    : `\\nNo journal written yet. Remind your friends to take a second to reflect. 🧘‍♀️`, onChange: (e) => handleJournalInputChange(e), value: !loadingnow ||\n                    ((_a = journalByDay[format(currentDay, \"yyyy-MM-dd\")]) === null || _a === void 0 ? void 0 : _a.content) ==\n                        journalInput\n                    ? journalInput\n                    : \"saving...\" })),\n        React.createElement(\"div\", { className: \" items-center flex gap-2\" },\n            selectedMember == user.email && (React.createElement(\"button\", { className: `${journalByDay[format(currentDay, \"yyyy-MM-dd\")]\n                    ? journalByDay[format(currentDay, \"yyyy-MM-dd\")].content ==\n                        journalInput\n                        ? \"bg-cpink\"\n                        : \"bg-red-400\"\n                    : journalInput == \"\"\n                        ? \"bg-cpink\"\n                        : \"bg-red-400\"} hover:bg-red-200 text-white mt-2 font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline `, onClick: handleSaveEntry }, \"Save Journal\")),\n            usePassword && (React.createElement(\"div\", { onClick: () => {\n                    setAccess(false);\n                }, className: `bg-cpink hover:bg-red-200 text-white mt-2 font-bold py-2.5 px-4 rounded focus:outline-none focus:shadow-outline ` },\n                React.createElement(FaLockOpen, { size: 12 }))))));\n};\nexport default Journal;\n","import React from \"react\";\nconst MoodPicker = ({ year, month, moodByDay, setMoodByDay, selectedDay, setMood, }) => {\n    const emotions = [\n        { emoji: \"😣\", text: \"rotten\", color: \"red-500\" },\n        { emoji: \"😔\", text: \"bummy\", color: \"orange-500\" },\n        { emoji: \"😐\", text: \"okey\", color: \"teal-500\" },\n        { emoji: \"😊\", text: \"nicee\", color: \"blue-500\" },\n        { emoji: \"🤩\", text: \"ahhh\", color: \"violet-900\" },\n    ];\n    return (React.createElement(\"div\", { className: \"flex flex-wrap px-2 font-serif w-full justify-between items-center gap-4\" }, emotions.map((emotion) => (React.createElement(\"div\", { key: emotion.emoji, className: \"flex justify-center items-center flex-col\" },\n        React.createElement(\"div\", { className: `w-8 h-8 rounded-full flex flex-col items-center place-items-center justify-center cursor-pointer transition-all ${moodByDay[`${year}-${month + 1}-${selectedDay}`] === emotion.emoji\n                ? `bg-teel`\n                : `bg-gray-200 `}`, onClick: () => {\n                const newMoodByDay = Object.assign({}, moodByDay);\n                newMoodByDay[`${year}-${month + 1}-${selectedDay}`] =\n                    emotion.emoji;\n                setMoodByDay(newMoodByDay);\n                setMood(false);\n            } },\n            React.createElement(\"span\", { className: \"text-xl\" }, emotion.emoji)),\n        React.createElement(\"span\", { className: `font-bold text-xs text-${emotion.color}` }, emotion.text),\n        React.createElement(\"span\", { className: \"text-red-500\" }),\n        React.createElement(\"span\", { className: \"text-orange-500\" }, \" \"),\n        React.createElement(\"span\", { className: \"text-green-500\" }, \" \"),\n        React.createElement(\"span\", { className: \"text-teal-500\" }, \" \"),\n        React.createElement(\"span\", { className: \"text-blue-500\" }, \" \"),\n        React.createElement(\"span\", { className: \"text-violet-900\" }, \" \"))))));\n};\nexport default MoodPicker;\n","import React, { useState, useRef } from \"react\";\nimport { format } from \"date-fns\";\nimport { FaTrash } from \"react-icons/fa\";\nconst TodoComp = ({ currentDay, setTodosData: setTodos, todosData: todos, user, db, selectedMember, setSelectedMember, code, setCode, members, setMembers, groupExists, setGroupExists, loading, setLoading, }) => {\n    var _a;\n    const [selected, setSelected] = useState(1);\n    const [showPopup, setShowPopup] = useState(false);\n    const [timeFormat, setTimeFormat] = useState(\"mins\");\n    const [acctimeFormat, setaccTimeFormat] = useState(\"mins\");\n    const selectRef = useRef(null);\n    const selectRef2 = useRef(null);\n    const handleKeyPress = (event) => {\n        if (event.key === \"Enter\" && event.target.value.trim() !== \"\") {\n            const newTodo = {\n                text: event.target.value.trim(),\n                plannedTime: \"\",\n                actualTime: \"\",\n                completed: false,\n                date: format(currentDay, \"yyyy-MM-dd\"),\n            };\n            const todosForCurrentDay = todos[format(currentDay, \"yyyy-MM-dd\")] || [];\n            setTodos(Object.assign(Object.assign({}, todos), { [format(currentDay, \"yyyy-MM-dd\")]: [...todosForCurrentDay, newTodo] }));\n            event.target.value = \"\";\n        }\n    };\n    const getValue = () => {\n        return selectRef.current.value;\n    };\n    const getValue2 = () => {\n        return selectRef2.current.value;\n    };\n    const handleCheckboxChange = (event, date, index) => {\n        const newTodos = Object.assign({}, todos);\n        newTodos[format(currentDay, \"yyyy-MM-dd\")][index].completed =\n            event.target.checked;\n        setSelected(index);\n        if (event.target.checked) {\n            setShowPopup(true);\n        }\n        setTodos(newTodos);\n    };\n    const handleActualTimeChange = (event, date, updateTime, value) => {\n        const newTodos = Object.assign({}, todos);\n        if (updateTime) {\n            const formatting = getValue2();\n            newTodos[format(currentDay, \"yyyy-MM-dd\")][selected].actualTime =\n                event.target.value;\n            newTodos[format(currentDay, \"yyyy-MM-dd\")][selected].acctimeFormat =\n                formatting;\n        }\n        else {\n            newTodos[format(currentDay, \"yyyy-MM-dd\")][selected].acctimeFormat =\n                value;\n        }\n        setTodos(newTodos);\n        if (event.key === \"Enter\" && event.target.value.trim() !== \"\") {\n            setShowPopup(false);\n        }\n    };\n    const handlePlannedTimeChange = (event, date, index, updateTime, value) => {\n        const newTodos = Object.assign({}, todos);\n        if (updateTime) {\n            const selectValue = getValue();\n            newTodos[format(currentDay, \"yyyy-MM-dd\")][index].plannedTime =\n                event.target.value.trim();\n            newTodos[format(currentDay, \"yyyy-MM-dd\")][index].timeFormat =\n                selectValue;\n        }\n        else {\n            newTodos[format(currentDay, \"yyyy-MM-dd\")][index].timeFormat = value;\n        }\n        setTodos(newTodos);\n    };\n    const handleClosePopup = (event) => {\n        if (event.key === \"Enter\" && event.target.value.trim() !== \"\") {\n            setShowPopup(false);\n        }\n    };\n    const handleDeleteClick = (index) => {\n        const newTodos = Object.assign({}, todos);\n        newTodos[format(currentDay, \"yyyy-MM-dd\")].splice(index, 1);\n        setTodos(newTodos);\n    };\n    return (React.createElement(\"div\", { className: \"flex pb-12 flex-col\" },\n        code && groupExists && (React.createElement(\"div\", null,\n            React.createElement(\"div\", { className: \"flex items-center my-2\" },\n                React.createElement(\"label\", { htmlFor: \"group-member-select\", className: \"w-32 mr-2\" }, \"Intentions for:\"),\n                React.createElement(\"select\", { id: \"group-member-select\", ref: selectRef, onChange: (e) => {\n                        setSelectedMember(e.target.value);\n                    }, className: \"p-2 w-full rounded border border-gray-200 outline-none\" },\n                    React.createElement(\"option\", { value: user.email }, \"meee!\"),\n                    members.map((member) => {\n                        if (member.showTodos) {\n                            return (React.createElement(\"option\", { key: member.email, value: member.email }, member.name));\n                        }\n                    }))),\n            React.createElement(\"hr\", { className: \"py-2\" }))),\n        selectedMember == user.email && (React.createElement(\"input\", { type: \"text\", placeholder: \"Add a new to do item...\", onKeyPress: handleKeyPress, className: \" p-2 w-80 rounded border border-gray-200 outline-none\" })),\n        ((_a = todos[format(currentDay, \"yyyy-MM-dd\")]) === null || _a === void 0 ? void 0 : _a.length) < 1 ||\n            (!todos[format(currentDay, \"yyyy-MM-dd\")] && (React.createElement(\"div\", { className: \"mt-2\" }, selectedMember != user.email\n                ? \"No to-dos written yet. Remind your friends to take a second to set intentions. ✅\"\n                : \"No to-dos written yet. Take a second to set intentions! ✅\"))),\n        React.createElement(\"ul\", { className: \"my-2  \" }, todos &&\n            todos[format(currentDay, \"yyyy-MM-dd\")] &&\n            todos[format(currentDay, \"yyyy-MM-dd\")].map((todo, index) => (React.createElement(\"li\", { key: index, className: \"flex items-center space-y-1 py-1 space-x-2 w-80\" },\n                React.createElement(\"div\", { className: \"flex items-center w-[250px]\" },\n                    React.createElement(\"input\", { type: \"checkbox\", disabled: selectedMember != user.email, checked: todo.completed, onChange: (event) => handleCheckboxChange(event, currentDay, index), className: \"mr-2\" }),\n                    React.createElement(\"span\", { className: todo.completed ? \"line-through\" : \"\" }, todo.text.length > 50\n                        ? `${todo.text.slice(0, 45)}...${todo.text.slice(-2)}`\n                        : todo.text)),\n                todo.completed && (React.createElement(\"div\", { className: \"bg-white rounded-lg flex flex-col place-self-end w-[160px] text-right justify-end items-end\" },\n                    React.createElement(\"span\", { className: \"text-[10px] w-full flex text-right justify-end items-end text-gray-400 place-self-end\" },\n                        \"Planned time:\",\n                        \" \",\n                        todo.plannedTime\n                            ? `${todo.plannedTime}${todo.timeFormat}`\n                            : \"n/a\"),\n                    React.createElement(\"span\", { className: \"text-[10px] w-full text-right justify-end items-end flex text-blue-500 place-self-end\" },\n                        \"Actual time:\",\n                        \" \",\n                        todo.actualTime\n                            ? `${todo.actualTime}${todo.acctimeFormat}`\n                            : \"n/a\"))),\n                !todo.completed && (React.createElement(\"div\", { className: \"flex items-end\" },\n                    React.createElement(\"input\", { disabled: selectedMember != user.email, type: \"text\", placeholder: \"Planned time\", value: todo.plannedTime, onChange: (event) => handlePlannedTimeChange(event, currentDay, index, true, null), onKeyPress: (e) => {\n                            const charCode = e.which ? e.which : e.keyCode;\n                            if (charCode > 31 && (charCode < 48 || charCode > 57)) {\n                                e.preventDefault();\n                            }\n                            else {\n                                handleClosePopup;\n                            }\n                        }, className: \"p-1 text-xs rounded-l w-[85px] border border-gray-400 outline-none placeholder:text-xs justify-end\" }),\n                    React.createElement(\"select\", { disabled: selectedMember != user.email, className: \"p-1 rounded-r max-w-[60px] border-y border-r border-gray-400 outline-none text-xs\", value: todos[format(currentDay, \"yyyy-MM-dd\")][index].timeFormat\n                            ? todos[format(currentDay, \"yyyy-MM-dd\")][index]\n                                .timeFormat\n                            : \"mins\", ref: selectRef, onChange: (e) => {\n                            // let switchTo = timeFormat == \"hrs\" ? \"mins\" : \"hrs\";\n                            // setTimeFormat(switchTo);\n                            handlePlannedTimeChange(e, currentDay, index, false, e.target.value ? e.target.value : \"mins\");\n                        } },\n                        React.createElement(\"option\", { value: \"hrs\" }, \"hrs\"),\n                        React.createElement(\"option\", { value: \"mins\" }, \"mins\")))),\n                selectedMember == user.email && (React.createElement(FaTrash, { className: \"text-cpink text-lg cursor-pointer\", onClick: () => handleDeleteClick(index) })))))),\n        showPopup && (React.createElement(\"div\", { className: \"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center\", style: { zIndex: 9999 }, onClick: (event) => {\n                if (event.target === event.currentTarget) {\n                    setShowPopup(false);\n                }\n            } },\n            React.createElement(\"div\", { className: \"bg-white  rounded-lg p-4 \" },\n                React.createElement(\"h1\", { className: \"p-1\" }, \"You're crushing your day!! \\uD83E\\uDD73\\uD83C\\uDF89\\uD83C\\uDF8A\"),\n                React.createElement(\"div\", { className: \"flex items-end\" },\n                    React.createElement(\"input\", { type: \"text\", placeholder: \"Actual time\", value: todos[format(currentDay, \"yyyy-MM-dd\")][selected].actualTime, onChange: (e) => handleActualTimeChange(e, currentDay, true, null), onKeyPress: (e) => {\n                            const charCode = e.which ? e.which : e.keyCode;\n                            if (charCode > 31 && (charCode < 48 || charCode > 57)) {\n                                e.preventDefault();\n                            }\n                            else {\n                                handleClosePopup;\n                            }\n                        }, className: \"p-1 text-xs rounded-l border placeholder:text-xs border-gray-400 outline-none justify-end \" }),\n                    React.createElement(\"select\", { className: \"p-1 rounded-r max-w-[60px] border-y border-r border-gray-400 outline-none text-xs\", value: todos[format(currentDay, \"yyyy-MM-dd\")][selected]\n                            .acctimeFormat\n                            ? todos[format(currentDay, \"yyyy-MM-dd\")][selected]\n                                .acctimeFormat\n                            : \"mins\", ref: selectRef2, onChange: (e) => {\n                            // let switchTo = acctimeFormat == \"hrs\" ? \"mins\" : \"hrs\";\n                            // setaccTimeFormat(switchTo);\n                            handleActualTimeChange(e, currentDay, false, e.target.value ? e.target.value : \"mins\");\n                        } },\n                        React.createElement(\"option\", { value: \"hrs\" }, \"hrs\"),\n                        React.createElement(\"option\", { value: \"mins\" }, \"mins\"))))))));\n};\nexport default TodoComp;\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport React, { useEffect, useState } from \"react\";\nimport { doc, getDoc, setDoc } from \"firebase/firestore\";\nimport CryptoJS from \"crypto-js\";\nconst UnlockJournal = ({ user, db, access, setAccess, password, setPassword, setUsePassword, }) => {\n    const [isLoading, setIsLoading] = useState(false);\n    const [hasPassword, setHasPassword] = useState(false);\n    const [showPopup, setShowPopup] = useState(false);\n    useEffect(() => {\n        const checkPasswordExists = () => __awaiter(void 0, void 0, void 0, function* () {\n            const userDocRef = doc(db, \"users\", user.email);\n            const userDoc = yield getDoc(userDocRef);\n            if (userDoc.exists()) {\n                const hashedPassword = userDoc.data().hashedJournalPassword;\n                const value = hashedPassword ? true : false;\n                if (!value) {\n                    setShowPopup(true);\n                }\n                setHasPassword(value);\n            }\n        });\n        checkPasswordExists();\n    }, []);\n    const handleOptOut = () => __awaiter(void 0, void 0, void 0, function* () {\n        const userDocRef = doc(db, \"users\", user.email);\n        yield setDoc(userDocRef, { usePassword: false }, { merge: true });\n        setUsePassword(false);\n    });\n    const handleSetPassword = (password) => __awaiter(void 0, void 0, void 0, function* () {\n        const hashedPassword = CryptoJS.SHA256(password).toString(CryptoJS.enc.Hex);\n        const userDocRef = doc(db, \"users\", user.email);\n        yield setDoc(userDocRef, { hashedJournalPassword: hashedPassword }, { merge: true });\n        setHasPassword(true);\n        setPassword(\"\");\n        checkPassword(password);\n    });\n    const checkPassword = (password) => __awaiter(void 0, void 0, void 0, function* () {\n        setIsLoading(true);\n        const userDocRef = doc(db, \"users\", user.email);\n        const userDoc = yield getDoc(userDocRef);\n        if (userDoc.exists()) {\n            const hashedPassword = userDoc.data().hashedJournalPassword;\n            const inputHash = CryptoJS.SHA256(password).toString(CryptoJS.enc.Hex);\n            if (hashedPassword === inputHash) {\n                handleClearClick();\n                setAccess(true);\n            }\n            else {\n                handleClearClick();\n                alert(\"Incorrect password. Please try again.\");\n            }\n        }\n        setIsLoading(false);\n    });\n    const handleKeypadClick = (digit) => {\n        if (digit == \"clear\") {\n            handleClearClick();\n            return;\n        }\n        setPassword((prevPassword) => prevPassword + digit);\n        if (password.length === 4) {\n            if (hasPassword) {\n                checkPassword(password + digit);\n            }\n            else {\n                handleSetPassword(password + digit);\n            }\n        }\n    };\n    const handleClearClick = () => {\n        setPassword(\"\");\n    };\n    return (React.createElement(\"div\", { className: \"mt-4 flex justify-center\" },\n        showPopup && (React.createElement(\"div\", { className: \"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center\", style: { zIndex: 9999 }, onClick: (event) => {\n                if (event.target === event.currentTarget) {\n                    setShowPopup(false);\n                }\n            } },\n            React.createElement(\"div\", { className: \"bg-white mx-2 rounded-lg p-4 \" },\n                React.createElement(\"h1\", null,\n                    \"Hey! MoodSpace is a safe place to journal your thoughts, and reflect on your day. \\u2764\\uFE0F\",\n                    React.createElement(\"br\", null),\n                    React.createElement(\"br\", null),\n                    React.createElement(\"span\", { className: \"underline\" }, \"If you want an extra layer of privacy you can set a password so no siblings or friends snoop in on your dearest thoughts. \\uD83D\\uDE31\"),\n                    \" \",\n                    \"This also adds an extra layer of encryption.\",\n                    React.createElement(\"br\", null),\n                    React.createElement(\"br\", null),\n                    \"You can opt out if you want to avoid re-entering a password each time and your data will still be safe with us.\",\n                    React.createElement(\"br\", null),\n                    React.createElement(\"br\", null),\n                    \"You can change preferences and opt in/out anytime in settings.\")))),\n        isLoading && (React.createElement(\"div\", { className: \"absolute top-0 left-0 w-full h-full flex justify-center items-center bg-white opacity-75 z-10\" },\n            React.createElement(\"div\", { className: \"animate-spin rounded-full h-32 w-32 border-t-2 border-b-2 border-gray-900\" }))),\n        React.createElement(\"div\", { className: \"flex mt-4 flex-col w-60 h-70 \" },\n            React.createElement(\"input\", { className: \"text-lg w-full text-center b-2 rounded-lg border-2 border-gray-200\", placeholder: hasPassword ? \"Enter your password\" : \"Choose a 5 digit password\", value: password && password }),\n            React.createElement(\"div\", { className: \"mt-4 ml-2 w-60 h-50 \" },\n                React.createElement(\"div\", { className: \"grid gap-5 grid-cols-3 grid-rows-3 h-full\" }, [\n                    \"1\",\n                    \"2\",\n                    \"3\",\n                    \"4\",\n                    \"5\",\n                    \"6\",\n                    \"7\",\n                    \"8\",\n                    \"9\",\n                    \"clear\",\n                    \"0\",\n                    \" \",\n                ].map((number) => (React.createElement(\"div\", { key: number, className: `flex w-12  h-12 justify-center items-center ${access ? \"bg-green-500\" : \"bg-gray-200 hover:bg-gray-300\"} rounded-full border-2 border-gray-300 font-bold text-gray-600`, onClick: () => handleKeypadClick(number) }, number))))),\n            React.createElement(\"div\", null, !hasPassword && (React.createElement(\"button\", { onClick: handleOptOut, className: \"mt-4 w-full place-self-center hover:bg-red-200 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline bg-cpink \" }, \"Opt out\"))))));\n};\nexport default UnlockJournal;\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport React from \"react\";\nimport { initializeApp } from \"firebase/app\";\nimport { getAuth, signInWithCredential, GoogleAuthProvider, } from \"firebase/auth\";\nimport { FIREBASE_CONFIG } from \"./const\";\nimport Navigation from \"./Router\";\nimport { getFirestore, doc, getDoc, } from \"firebase/firestore\";\nimport Signup from \"./components/Signup\";\nexport const firebase = initializeApp(FIREBASE_CONFIG);\nexport const auth = getAuth(firebase);\nconst db = getFirestore(firebase);\nconst FirebaseApp = (props) => {\n    const [user, setUser] = React.useState(undefined);\n    const [isLogin, setIsLogin] = React.useState(true);\n    const [name, setName] = React.useState(\"\");\n    const [age, setAge] = React.useState(\"\");\n    const [reason, setReason] = React.useState(\"\");\n    const [firstTime, setFirstTime] = React.useState(null);\n    const signIn = (e) => {\n        e.preventDefault();\n        chrome.identity.getAuthToken({ interactive: true }, (token) => {\n            if (chrome.runtime.lastError || !token) {\n                alert(`SSO ended with an error: ${JSON.stringify(chrome.runtime.lastError)}`);\n                return;\n            }\n            signInWithCredential(auth, GoogleAuthProvider.credential(null, token))\n                .then((res) => { })\n                .catch((err) => {\n                alert(`SSO ended with an error: ${err}`);\n            });\n        });\n    };\n    React.useEffect(() => {\n        auth.onAuthStateChanged((user) => {\n            setUser(user && user.uid ? user : null);\n        });\n    }, []);\n    const checkIfFirstTime = () => __awaiter(void 0, void 0, void 0, function* () {\n        const userRef = doc(db, \"users\", user.email);\n        const docSnap = yield getDoc(userRef);\n        if (docSnap.exists()) {\n            setFirstTime(false);\n        }\n        else {\n            console.log(\"User does not already exist:\");\n            setFirstTime(true);\n        }\n    });\n    if (undefined === user)\n        return React.createElement(\"h1\", null, \"Loading...\");\n    //return this when there is a user\n    if (user != null) {\n        checkIfFirstTime();\n        return (React.createElement(\"div\", { className: \"w-full h-full\" }, firstTime === null ? (React.createElement(\"div\", { className: \"flex items-center justify-center h-full w-full\" },\n            React.createElement(\"div\", { className: \"animate-spin rounded-full h-16 w-16 border-t-2 border-b-2 border-gray-900\" }))) : firstTime ? (React.createElement(Signup, { user: user, db: db, setFirstTime: setFirstTime })) : (React.createElement(Navigation, { user: user, auth: auth, db: db }))));\n    }\n    //return this when there is no user\n    return (React.createElement(\"div\", { className: \"flex place-self-center flex-col w-full 2-full place-items-center items-center justify-center h-[400px]\" },\n        React.createElement(\"div\", { className: \"flex items-center gap-2\" },\n            React.createElement(\"img\", { src: \"logo128x128.png\", alt: \"MoodSpace logo\", className: \"w-10 mb-8\" }),\n            React.createElement(\"h1\", { className: \"text-xl font-serif font-bold mb-6\" }, \"Welcome to MoodSpace\")),\n        React.createElement(\"button\", { className: \"bg-teel w-32 h-10 text-center text-white font-bold rounded hover:bg-teal-600\", onClick: signIn }, \"Sign In with Google\")));\n};\nexport default FirebaseApp;\n","import React from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport \"../assets/css/tailwind.css\";\nimport Popup from \"./Popup\";\nfunction init() {\n    const appContainer = document.createElement(\"div\");\n    document.body.appendChild(appContainer);\n    if (!appContainer) {\n        throw new Error(\"Cannot find appContainer\");\n    }\n    const root = createRoot(appContainer);\n    root.render(React.createElement(Popup, null));\n}\ninit();\n","export const FIREBASE_CONFIG = {\n  apiKey: process.env.REACT_APP_apiKey,\n  authDomain: process.env.REACT_APP_authDomain,\n  projectId: process.env.REACT_APP_projectId,\n  storageBucket: process.env.REACT_APP_storageBucket,\n  messagingSenderId: process.env.REACT_APP_messagingSenderId,\n  appId: process.env.REACT_APP_appId,\n  measurementId: process.env.REACT_APP_measurementId,\n};\n","/* (ignored) */","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t\"popup\": 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkmoodspace\"] = self[\"webpackChunkmoodspace\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","__webpack_require__.nc = undefined;","","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [\"vendors-node_modules_css-loader_dist_runtime_api_js-node_modules_css-loader_dist_runtime_sour-b53f7e\",\"vendors-node_modules_crypto-js_index_js-node_modules_date-fns_esm_format_index_js-node_module-289293\",\"src_assets_css_tailwind_css\"], () => (__webpack_require__(\"./src/popup/index.tsx\")))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n",""],"names":[],"sourceRoot":""}